<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>矩阵理论与方法定义</title>
    <link href="/2022/10/04/%E7%9F%A9%E9%98%B5%E7%90%86%E8%AE%BA%E4%B8%8E%E6%96%B9%E6%B3%95%E5%AE%9A%E4%B9%89/"/>
    <url>/2022/10/04/%E7%9F%A9%E9%98%B5%E7%90%86%E8%AE%BA%E4%B8%8E%E6%96%B9%E6%B3%95%E5%AE%9A%E4%B9%89/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p><strong>定义1.19</strong> 首项系数是1（简称首1），次数最小，且以矩阵A为根的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span>的多项式，称为<strong>A</strong>的<strong>最小多项式</strong>，常用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">λ</span><span class="mclose">)</span></span></span></span>表示<br /><strong>定理1.17</strong> 任意n阶矩阵与三角矩阵相似<br /><strong>定理1.18</strong> n阶矩阵A是其特征多项式的矩阵根（零点），即令$$<br />\varphi(\lambda)=\operatorname{det}(\lambda \boldsymbol{I}-\boldsymbol{A})=\lambda^{n}+a_{1} \lambda^{n-1}+\cdots+a_{n-1} \lambda+a_{n}</p>则有$$\varphi(\boldsymbol{A})=\boldsymbol{A}^{n}+a_{1} \boldsymbol{A}^{n-1}+\cdots+a_{n-1} \boldsymbol{A}+a_{n} \boldsymbol{I}=\boldsymbol{O} <p><strong>定理1.20</strong> 矩阵A的最小多项式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">λ</span><span class="mclose">)</span></span></span></span>与其特征多项式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">λ</span><span class="mclose">)</span></span></span></span>的零点相同（不计重数）<br /><strong>定理1.21</strong> 设n阶矩阵A的特征多项式为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">λ</span><span class="mclose">)</span></span></span></span>，特征矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mi mathvariant="bold-italic">I</mi><mo>−</mo><mi mathvariant="bold-italic">A</mi></mrow><annotation encoding="application/x-tex">\lambda \boldsymbol{I}-\boldsymbol{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">λ</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">I</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span></span></span></span></span>的全体n-1阶子式的最大公因式为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(\lambda)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">λ</span><span class="mclose">)</span></span></span></span>,则A的最小多项式为$$<br />m(\lambda)=\frac{\varphi(\lambda)}{d(\lambda)}$$</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python基础</title>
    <link href="/2022/09/22/Python%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/09/22/Python%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="基本"><a class="markdownIt-Anchor" href="#基本"></a> 基本</h2><h3 id="空值nonetype"><a class="markdownIt-Anchor" href="#空值nonetype"></a> 空值（NoneType）：</h3><p>空值是Python里一个特殊的值，用 None 表示，一般用 None 填充表格中的缺失值。<br />使用 type() 函数来获取某值的类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span> <span class="hljs-built_in">type</span>(<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span> <span class="hljs-built_in">type</span>(<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><h3 id="算数运算符"><a class="markdownIt-Anchor" href="#算数运算符"></a> 算数运算符：</h3><p>a*b：a乘以b<br />a/b：a除以b<br />a//b: a除以b后向下圆整，丢弃小数部分<br />a**b： a的b次方<br />函数int(),float(),str(),bool()用于将变量转换成相应类型<br />isinstance()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">isinstance</span>(<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-built_in">str</span>)<br></code></pre></td></tr></table></figure><hr /><h2 id="数据的容器"><a class="markdownIt-Anchor" href="#数据的容器"></a> 数据的容器</h2><h3 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h3><ul><li>列表（list）是一个有序的序列结构，序列中的元素可以是不同的数据类型。</li><li>列表可以进行一系列序列操作，如索引、切片、加、乘和检查成员等。<br />列表创建：将列表中的各元素用逗号分隔开，并用中括号将所有元素包裹起来</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">list</span>=[<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;abc&#x27;</span>]<br></code></pre></td></tr></table></figure><p>列表对象的增减：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">list</span>.append() <span class="hljs-comment"># 在列表末尾添加元素</span><br><span class="hljs-built_in">list</span>.remove() <span class="hljs-comment"># 删除元素 适用于知道要删除的值的情况</span><br><span class="hljs-keyword">del</span> <span class="hljs-built_in">list</span>[] <span class="hljs-comment"># 删除索引位置的元素</span><br><span class="hljs-built_in">list</span>.pop() <span class="hljs-comment"># 删除索引位置的元素 返回元素的值</span><br><span class="hljs-built_in">list</span>.insert() <span class="hljs-comment"># 在指定的索引位置添加数据元素</span><br></code></pre></td></tr></table></figure><p>列表索引：Python语言中所有的索引都是从 0 开始计数的，如果列表中有 n 个元素，那么最后一个元素的索引是 n-1<br />列表长度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">len</span>(<span class="hljs-built_in">list</span>)<br></code></pre></td></tr></table></figure><p>列表切片：切片操作需要提供起始索引位置、最后索引位置和步长，然后用冒号分开。起始索引位置的值包含在返回结果中，而最后索引位置的值不包含在返回结果中。如果未输入步长，则默认步长为1。<br />如果想要将列表的顺序颠倒，则可以使用::-1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span> <span class="hljs-built_in">list</span>[<span class="hljs-number">1</span>:<span class="hljs-number">3</span>]<br><span class="hljs-built_in">print</span> <span class="hljs-built_in">list</span>[-<span class="hljs-number">3</span>:-<span class="hljs-number">1</span>] <span class="hljs-comment"># 逆向索引</span><br><span class="hljs-built_in">print</span> <span class="hljs-built_in">list</span>[:] <span class="hljs-comment"># 输出整个列表</span><br><span class="hljs-built_in">print</span> <span class="hljs-built_in">list</span>[::-<span class="hljs-number">1</span>] <span class="hljs-comment">#将列表的顺序颠倒</span><br></code></pre></td></tr></table></figure><p>嵌套列表：列表中的元素也可以是列表，这样可以将列表看成更高维的数组</p><h3 id="元组"><a class="markdownIt-Anchor" href="#元组"></a> 元组</h3><ul><li>元组（tuple）数据结构与列表类似，其中元素可以有不同的类型。<br />但是元组中的元素是不可变的，即一旦初始化之后，就不能够再做修改。</li><li>由于元组是不可变的，因此元组对象没有append()、insert()和del这样的方法。</li><li>实际上，tuple的使用可以使得代码更安全，防止错误赋值导致重要对象的改变。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">tuple</span>=(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;abc&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="字典"><a class="markdownIt-Anchor" href="#字典"></a> 字典</h3><ul><li>字典是一种大小可变的键值对集，其中的键（key）和值（value）都是Python对象。</li><li>字典的创建使用大括号 {} 包含键值对，并用冒号 : 分隔键和值，形成 键:值 对。<br />字典创建：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">dict</span>=&#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;abc&#x27;</span>,<span class="hljs-number">2</span>:<span class="hljs-string">&#x27;bcd&#x27;</span>,c:<span class="hljs-string">&#x27;cde&#x27;</span>&#125;<br><span class="hljs-built_in">dict</span>=&#123;&#125;<br>list1=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>list2=[<span class="hljs-string">&#x27;abc&#x27;</span>,<span class="hljs-string">&#x27;bcd&#x27;</span>,<span class="hljs-string">&#x27;cde&#x27;</span>]<br><span class="hljs-keyword">for</span> key,value <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(list1,list2): <span class="hljs-comment"># 利用zip()函数创建字典</span><br>    <span class="hljs-built_in">dict</span>[key]=value<br></code></pre></td></tr></table></figure><p>字典索引：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">dict</span>[<span class="hljs-number">1</span>] <span class="hljs-comment"># 字典的索引号是键(key)</span><br><span class="hljs-built_in">dict</span>.get(<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span> <span class="hljs-number">3</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">dict</span> <span class="hljs-comment"># 通过in判断是否存在某个键，返回True或False</span><br><span class="hljs-built_in">dict</span>.keys() <span class="hljs-comment"># 遍历字典的键</span><br><span class="hljs-built_in">dict</span>.values() <span class="hljs-comment"># 遍历字典的值</span><br><span class="hljs-built_in">dict</span>.items() <span class="hljs-comment"># 返回所有键值对，保存在一个元组列表中</span><br></code></pre></td></tr></table></figure><p>字典元素删减：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">del</span> <span class="hljs-built_in">dict</span>[<span class="hljs-number">1</span>]<br><span class="hljs-built_in">dict</span>.pop(<span class="hljs-number">1</span>)<br><span class="hljs-built_in">dict</span>.clear() <span class="hljs-comment"># 清空字典的所有元素</span><br></code></pre></td></tr></table></figure><h3 id="集合"><a class="markdownIt-Anchor" href="#集合"></a> 集合</h3><ul><li>集合（set）是一种无序集，它是一组键的集合，不存储值。</li><li>在集合中，重复的键是不被允许的。集合可以用于去除重复值。</li><li>集合也可以进行数学集合运算，如并、交、差以及对称差等。<br />集合创建：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">aset=<span class="hljs-built_in">set</span>() <span class="hljs-comment"># 用set函数创建集合 可以创建空集合</span><br>bset=&#123;<span class="hljs-string">&#x27;abc&#x27;</span>,<span class="hljs-string">&#x27;bcd&#x27;</span>,<span class="hljs-string">&#x27;cde&#x27;</span>&#125; <span class="hljs-comment"># &#123;&#125;内不能为空，否则创建字典</span><br></code></pre></td></tr></table></figure><p>集合运算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">aset|bset <span class="hljs-comment"># 并集</span><br>aset&amp;bset <span class="hljs-comment"># 交集</span><br>aset-bset <span class="hljs-comment"># 差集</span><br>aset^bset <span class="hljs-comment"># 异或</span><br>aset.add(x) <span class="hljs-comment"># 把元素x添加到集合中</span><br>aset.remove(x) <span class="hljs-comment"># 把元素从集合中删除</span><br>aset.union(bset) <span class="hljs-comment"># aset和bset中全部的唯一元素 aset|bset</span><br>aset.intersection(bset) <span class="hljs-comment"># aset和bset都有的元素 aset&amp;bset</span><br>aset.difference(bset) <span class="hljs-comment"># aset中不属于bset的元素 aset-bset</span><br>aset.symmetric_difference(bset) <span class="hljs-comment"># a^b</span><br>aset.issubset(bset) <span class="hljs-comment"># 如果aset的全部元素都包含于bset，则为True</span><br>aset.issuperset(bset) <span class="hljs-comment"># 如果bset的全部元素都包含于aset，则为True</span><br>aset.isdisjoint(bset) <span class="hljs-comment"># 如果aset和bset没有公共元素，则为True</span><br></code></pre></td></tr></table></figure><hr /><h2 id="控制结构"><a class="markdownIt-Anchor" href="#控制结构"></a> 控制结构</h2><p>if语句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span>(a&gt;b);    <span class="hljs-comment"># if-else语句</span><br>   <span class="hljs-built_in">print</span>(a)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(b)<br><br><span class="hljs-keyword">if</span>(a&gt;b):   <span class="hljs-comment"># if-elif语句</span><br>   <span class="hljs-built_in">print</span>(a)<br><span class="hljs-keyword">elif</span>(b&gt;<span class="hljs-number">1</span>):<br>   <span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></table></figure><p>for循环：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> <span class="hljs-built_in">list</span>:<br>    <span class="hljs-built_in">print</span> a<br></code></pre></td></tr></table></figure><p>while循环：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span> a&gt;<span class="hljs-number">1</span>:<br>    <span class="hljs-built_in">print</span> a<br></code></pre></td></tr></table></figure><p>列表推导式：关键词for循环后跟的是循环语法，这部分不变；而在for循环真正表达式部分则在列表推导式中移前，运算结果直接添加入列表中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">lst=[i**<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>)] <span class="hljs-comment"># lst=[0,1,4,9,16]</span><br>dicts=&#123;v:k <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> dic.items()&#125; <span class="hljs-comment"># 键值对换</span><br><span class="hljs-keyword">for</span> i,j <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>([<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;b&quot;</span>,<span class="hljs-string">&quot;c&quot;</span>]): <span class="hljs-comment">#不但会产生列表内的元素，并且会从&quot;0&quot;开始按顺序生成序号</span><br>    <span class="hljs-built_in">print</span> i,j<br></code></pre></td></tr></table></figure><h2 id="数据读写"><a class="markdownIt-Anchor" href="#数据读写"></a> 数据读写</h2><p>数据的读取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">file1=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;abc.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-comment"># r表示只读</span><br><span class="hljs-built_in">print</span>(file1.read()) <span class="hljs-comment"># 返回文件中所有的内容</span><br><span class="hljs-built_in">print</span>(file1.readlines()) <span class="hljs-comment"># 返回一个列表 包含转义符</span><br>file1.close() <span class="hljs-comment"># 关闭文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;abc.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment"># 可以自动关闭文件</span><br>    <span class="hljs-built_in">print</span>(f.read(<span class="hljs-number">10</span>)) <span class="hljs-comment"># 读取10个字符</span><br></code></pre></td></tr></table></figure><p>数据的写入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">file2=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;abc.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br>file2.write(<span class="hljs-string">&#x27;abc&#x27;</span>) <span class="hljs-comment"># 覆盖文件原来的内容</span><br></code></pre></td></tr></table></figure><p>csv文件的读写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> csv<br>f=<span class="hljs-built_in">open</span>(path,<span class="hljs-string">&#x27;w&#x27;</span>)<br>writer=csv.writer(f)<br><span class="hljs-keyword">for</span> con <span class="hljs-keyword">in</span> writer:<br>    writer.writerow(con)<br></code></pre></td></tr></table></figure><p>定义函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">content</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(content,<span class="hljs-built_in">str</span>):<br>        f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;file.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>)<br>        <span class="hljs-keyword">try</span>:<br>            f.write(content)<br>        <span class="hljs-keyword">except</span> Exception:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">2</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">finally</span>:<br>            f.close()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>网络爬虫</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> urllib2request=urllib2.Request(<span class="hljs-string">''</span>)<span class="hljs-keyword">try</span>:    urllib2.urlopen(request)<span class="hljs-keyword">except</span> urllib2.URLError,e:    print(e.reason)<span class="hljs-keyword">except</span> urllib2.HTTPError,e:    print(e.code)<span class="hljs-keyword">else</span>:    print(<span class="hljs-string">'OK'</span>)</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语听力视频训练</title>
    <link href="/2022/09/22/%E8%8B%B1%E8%AF%AD%E5%90%AC%E5%8A%9B%E8%A7%86%E9%A2%91%E8%AE%AD%E7%BB%83/"/>
    <url>/2022/09/22/%E8%8B%B1%E8%AF%AD%E5%90%AC%E5%8A%9B%E8%A7%86%E9%A2%91%E8%AE%AD%E7%BB%83/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>视频来源于bilibili：<a href="https://www.bilibili.com/video/BV1Dk4y1q781/?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=7d4ddbfe6a66f2fbe94075935b693c57">【TED-ED 700集】B站最好英语合集，刷一遍绝对能让你英语口语起飞！</a></p><hr /><h1 id="p1-22921"><a class="markdownIt-Anchor" href="#p1-22921"></a> P1 22.9.21</h1><p>it starts as a <strong>whisper</strong>, a word on the air, it can’t quite be heard, <strong>but</strong> you know <strong>that it’s there</strong>, as <s>gental</s> <strong>gentle</strong> as sunlight, as <strong>tenacious(坚韧的)</strong> as <s>heal</s> <strong>hail(冰雹)</strong>, <s>as it root</s> <strong>in its route</strong> to the heart,<strong>it</strong> could not but <strong>prevail(流行，获胜)</strong>, and people looked up <s>for</s> <strong>from</strong> their day-to-day tasks, <s>the</s> <strong>their</strong> day to day jobs, and <strong>their</strong> day to day masks, they heard or they flet, <s>with</s> <strong>where</strong> the <s>wisper</s> whisper could lead, <s>on</s> <strong>and</strong> <s>the</s> <strong>they</strong> looked with eyes wide at what that <strong>might</strong> mean. And <s>one</s> <strong>once they</strong>  could see it, <s>happen to</s> <strong>they hadn’t a</strong> chance, to resist the sweet <s>sound</s> <strong>song</strong> of the deep spell it <s>cost</s> <strong>cast</strong>. But the feeling <s>is _ first gless</s> <strong>it brought them at first glance</strong>, <s>it’s</s> <strong>was</strong> pain, <s>it’s left</s> <strong>as they lifted</strong> their eyes on the land they had <strong>claimed(索取)</strong>. Since they <s>sow</s> <strong>saw</strong> at last, as if rised from <strong>a</strong> dream, they were almost alone <strong>on the</strong> land <s>or</s> and the sea. <s>But</s> <strong>For the</strong> trees had almost gone, and bees had almost gone, and <strong>the</strong> creatrues in their shells by the seas had almost gone, and people felt sad as <strong>they</strong> <s>sow</s> <strong>saw</strong> their new <strong>Earth</strong>, but they <s>use it _</s> <strong>this was it</strong> , one wild chance for <strong>rebirth</strong>, breaking new ground, seeds rolling down, <s>semlling</s> <strong>smell of the earth</strong> on your hands and your brow, no time to sorrow, we’<strong>re</strong> building tomorrow, the sound of things growing, now keeps us <s>sround</s> <strong>around</strong>, as <s>wild as</s> <strong>the wildeness</strong> grows, <strong>and</strong> the deep <s>would</s> <strong>wood</strong> grows, <s>as</s> <strong>and</strong> the sense <s>of</s> <strong>that</strong> the futher’<strong>s</strong> come to meet you grows, there’s no chance we can rest, we must do our best, this moment can lead us back home, that’s our test, it starts as a <s>wisper</s> <strong>whisper</strong>, a word on the <s>ear</s> <strong>air</strong> <s>to</s> <strong>. It</strong> can’t quite be heard, but you know that <s>is</s> <strong>it’s</strong> there. <s>It’s _ _ _</s> <strong>It then spoke like thunder</strong>, until we all moved, and we could, and we did, and <s>it _</s> <strong>it’s done</strong>. She is renewed.</p><hr /><p>P2 22.9.23<br />Everyday a <strong>sea</strong> of(一片，大量) decisions <strong>stretches(延伸，绵延)</strong> before us. Some are small and aren’t important, but others has a large impact on our lives. For example, which <s>politision</s> <strong>politician(政客)</strong> should I vote for, should I try <s>a _ _</s> <strong>the latest diet craze(热潮)</strong>, or <s>where</s> <strong>will</strong> email make me <strong>a millionaire</strong>. We are <strong>bombarded(轰击) with</strong> so many decisions that is impossible to make a perfect choice everytime. But there are many ways to improve our <strong>chances</strong>, and one particulirly effective <strong>technique</strong> is critical thinking. This is a way of approaching a question. That allows us to carefully <s>dig _</s> <strong>deconstruct(解构) a</strong> situation. <s>Review</s> <strong>reveal</strong> it’s <strong>hidden issues</strong>, such as bias(偏见) and manipulation(操纵), and make the best dicision. If the critical part sounds negetive, that because in a way, it is. Rather than choose an answer because it feels right, a person who use the critical thinking subjects all available options to <strong>scrutiny(审查)</strong> and <strong>skepticism(怀疑)</strong>. Using the tools <strong>at their disposal(处理)</strong> , <strong>they’ll</strong> eliminate(消除) everything but the most useful and reliable imformation. There are many different ways of apporching critical thinking, but here’s one five step process that may help you slove any number of problems. One, formulate your question. In other words, know what you looking for. <s>It</s> <strong>This</strong> isn’t always as strightforward as it sounds. For example, if you deciding whether to try out <s>a new style _</s> <strong>the newest diet craze</strong>, your reasons for doing so maybe <strong>obscured(掩盖)</strong> by other factors, like claim that <s>use it</s> <strong>you’ll see</strong> results in just two weeks, but if you approach the situation with a clear view of what you actually trying to acomplish by dieting, whether that’s weight loss,better nutrition or having more energy. That <strong>equip</strong> you to <strong>sift(筛选)</strong> through this information critically find what you’<strong>re</strong> looking for. And decide whether the new <strong>fad(时尚)</strong> really suit your needs. Two, gether your information. There’s <s>lot</s> <strong>lots of it out</strong> there. So have<strong>ing</strong> a clear idea of your question will help you determine what’s relevant. If you trying to decide on <s>the</s> <strong>a</strong> diet <s>and</s> <strong>to</strong> improve your nutrition, you may ask an expert for their advice, or seek other people’<strong>s</strong> <s>_ on this</s> <strong>testimonies(证词)</strong>. Information <strong>gathering</strong> help you <s>wait</s> <strong>weight</strong> different options, moving you closer to a decision that <strong>meets</strong> your <s>goat</s> <strong>goal</strong>. Three, apply the information. Something you do by ask in critical questions. Facing a decison, ask yourself what concepts right work, what assumption exist, is my interpretation(解释) of the information logically sound? For example, in an email that promises you millions, you should consider what is <strong>shaping</strong> my approach <s>the</s> <strong>to this</strong> situation. Do I <s>soon</s> <strong>assume the sender(发件人)</strong> telling the truth? Based on the evidence, is it logical to assume <s>our</s> <strong>I’ll</strong> win any money? Four, consider the implications. <s>Imagen</s> <strong>Imagine</strong> it’s <s>a _</s> <strong>election</strong> time, and you selected a political candidate based on their promise to make <s>a</s> <strong>it</strong> cheaper for drivers <strong>to fill up on</strong> gas. At first <strong>glance</strong> that <strong>seems</strong> great, but what about the long trem <s>invertmental _</s> <strong>environmental effects</strong>? If <s>gas _</s> <strong>gasoline(汽油)</strong> is less <strong>restricted</strong> by cost, <s>it</s> <strong>this</strong> could also cause a huge <strong>surge(冲击) in</strong> air pollution and <s>on intended _</s> <strong>unintended consequence</strong>, that’s importent to think about. Five, explore other’s points of view. Ask yourself, why so many people are <strong>drown(被吸引)</strong> to the policies of <strong>the opposing</strong> political candidate. Even if you disagee with everything that candidit says, exploring the full <strong>spectrum(光谱，范围)</strong> <s>your points</s> <strong>of viewpoints</strong> might explain why some policies that don’t <strong>seem valid to</strong> you <s>appear</s> <strong>appeal(有吸引力的)</strong> to others. This <strong>will allow</strong> you to explore alternatives <s>if _</s> <strong>evaluate your own</strong> choices. And <strong>ultimately(最终)</strong> help you make more informed decisions. This five steps process is just one tool, and it certianly <s>want you _</s> <strong>won’t eradicate(根除)</strong> difficult decisions from <strong>our lives</strong>. But it can’t help us increase the number of possitive choices we make. Critical thinking can give us the tools to <s>safet</s> <strong>sift</strong> through <strong>a sea of</strong> information and <s>found</s> <strong>find</strong> what <s>our</s> <strong>we’re</strong> looking for. And if <strong>enough of us</strong> use it, <strong>it</strong> <s>have</s> <strong>has</strong> <s>a</s> <strong>the</strong> power to make the world a more reasonable place.</p><hr /><p>P3 22.9.26<br />When faced with a big challege where potential failuer sames to look it every coner. Maybe if _ this advace before. Be more confident. And most likely this is what you think when you hearing it. If only without simple. But what is confidence? Take the belife if you’re valueabale. Worthwhile and keepable. Also _ self and steam, and in the optmisem _ comes when you are _ of your abilities, and _ power by this, act _, face a chanllege had on.This is confidence. It tends thought interaction. So where is the confidence even come from? There are seveal factors that impact confidence. One, what you born with. Such as your gences which will impact things like the balance of nurial camicals in your brain. Two, how you tred it. This includes the social _ of your enverment. And three, the part you have control over.</p>]]></content>
    
    
    
    <tags>
      
      <tag>英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>主成分分析PCA学习笔记</title>
    <link href="/2022/09/21/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90PCA%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/09/21/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90PCA%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="基变换的矩阵表示"><a class="markdownIt-Anchor" href="#基变换的矩阵表示"></a> 基变换的矩阵表示</h2><p>要描述向量，首先要确定一组基，然后给出在基所在的各个直线上的投影值。向量的内积可以表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>⋅</mo><mi>B</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mi>A</mi><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><mi>B</mi><mo fence="true">∣</mo></mrow><mi>cos</mi><mo>⁡</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">A \cdot B=\left | A \right |\left | B \right |\cos \alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathdefault">A</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>,当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>的模长为1时，该式反应的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>方向上投影的长度。因此令基的模为1，可以用向量点乘基得到该向量在新基下的坐标。<br />一般的，如果我们有M个N维向量，想将其变换为由R个N维向量表示的新空间中，那么首先将R个基按行组成矩阵A，然后将向量按列组成矩阵B，那么两矩阵的乘积AB就是变换结果，其中AB的第m列为A中第m列变换后的结果。<br />数学表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>p</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>p</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>p</mi><mi>R</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>1</mn></msub><msub><mi>a</mi><mn>2</mn></msub><mo>⋯</mo><msub><mi>a</mi><mi>M</mi></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mn>1</mn></msub><msub><mi>a</mi><mn>1</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mn>1</mn></msub><msub><mi>a</mi><mn>2</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mn>1</mn></msub><msub><mi>a</mi><mi>M</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mn>2</mn></msub><msub><mi>a</mi><mn>1</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mn>2</mn></msub><msub><mi>a</mi><mn>2</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mn>2</mn></msub><msub><mi>a</mi><mi>M</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mi>R</mi></msub><msub><mi>a</mi><mn>1</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mi>R</mi></msub><msub><mi>a</mi><mn>2</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>p</mi><mi>R</mi></msub><msub><mi>a</mi><mi>M</mi></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{pmatrix}  p_1 \\  p_2 \\  \vdots \\  p_R\end{pmatrix}\begin{pmatrix}  a_1   a_2   \cdots   a_M\end{pmatrix}=\begin{pmatrix}  p_1a_1 &amp; p_1a_2 &amp; \cdots &amp; p_1a_M \\  p_2a_1 &amp; p_2a_2 &amp; \cdots &amp; p_2a_M \\  \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\  p_Ra_1 &amp; p_Ra_2 &amp; \cdots &amp; p_Ra_M \\\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500349999999997em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.5049950000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.1050050000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7050150000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500349999999997em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.5049950000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.1050050000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7050150000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500349999999997em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.5049950000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.1050050000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7050150000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.5799999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.3800000000000006em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500349999999997em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.5049950000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.1050050000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7050150000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>这里R可以小于N，而R决定了变换后数据的维数。也就是说，我们可以将一N维数据变换到更低维度的空间中去，<strong>变换后的维度取决于基的数量</strong>。因此这种矩阵相乘的表示也可以表示降维变换。<br />最后，上述分析同时给矩阵相乘找到了一种物理解释：<strong>两个矩阵相乘的意义是将右边矩阵中的每一列列向量变换到左边矩阵中每一行行向量为基所表示的空间中去</strong>。</p><h2 id="优化目标"><a class="markdownIt-Anchor" href="#优化目标"></a> 优化目标</h2><p>如果我们有一组N维向量，现在要将其降到K维（K小于N），那么要考虑如何选择K个基才能最大程度保留原有的信息。一般来说，我们希望数据投影后的值尽可能分散，如果投影值的重叠程度高，就会造成信息丢失。<br /><strong>二维降到一维</strong>：我们希望投影后投影值尽可能分散，而这种分散程度，可以用数学上的方差来表述。此处，一个向量的方差可以看做是向量中每个元素与向量均值的差的平方和的均值。我们首先将每个向量内所有值都减去向量均值，其结果是将每个向量的均值都变为0，此时方差可以直接用每个元素的平方和除以元素个数表示。<br /><strong>三维降到二维</strong>：首先我们希望找到一个方向使得投影后方差最大，这样就完成了第一个方向的选择，继而我们选择第二个投影方向。从直观上说，让两个向量尽可能表示更多的原始信息，我们是不希望它们之间存在（线性）相关性的，因为相关性意味着两个向量不是完全独立，必然存在重复表示的信息。数学上可以用样本的协方差公式表示其相关性，由于已经让每个向量均值为0，则：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mi>i</mi></msub><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Cov(a,b)=\frac{1}{n-1}\sum_{i=1}^{n}a_ib_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>当协方差为0时表示两个向量没有相关性，此时两个向量正交。因此选择第二个基时只能在与第一个基正交的方向上选择。</p><p><strong>降维问题的优化目标</strong>：<br />将一组N维向量降为K维（K大于0，小于N），其目标是选择K个单位（模为1）正交基，使得原始数据变换到这组基上后，各向量两两间协方差为0，而方差则尽可能大（在正交的约束下，取最大的K个方差）。</p><h2 id="协方差矩阵"><a class="markdownIt-Anchor" href="#协方差矩阵"></a> 协方差矩阵</h2><p>现有a和b两个向量，组成矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mi>m</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mi>m</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex"> X=\begin{pmatrix}a_1 &amp; a_2 &amp; \cdots &amp; a_m \\b_1 &amp; b_2 &amp; \cdots &amp; b_m \\\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>乘<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">X^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，并乘上系数1/m:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac><mi>X</mi><msup><mi>X</mi><mi>T</mi></msup><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mstyle><msubsup><mi>a</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mstyle><msub><mi>a</mi><mi>i</mi></msub><msub><mi>b</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mstyle><msub><mi>a</mi><mi>i</mi></msub><msub><mi>b</mi><mi>i</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mi>m</mi></mfrac><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup></mstyle><msubsup><mi>b</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\frac{1}{m}XX^T=\begin{pmatrix}\frac{1}{m} {\textstyle \sum_{i=1}^{m}}a_i^2 &amp; \frac{1}{m}{\textstyle \sum_{i=1}^{m}}a_ib_i \\ \frac{1}{m}{\textstyle \sum_{i=1}^{m}}a_ib_i &amp; \frac{1}{m}{\textstyle \sum_{i=1}^{m}}b_i^2\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.410216em;vertical-align:-0.9551080000000003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551079999999998em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.404892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551080000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551079999999998em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.404892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551080000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>这个矩阵对角线上的两个元素分别是两个向量的方差，而其它元素是a和b的协方差。<br />设我们有m个n维数据记录，将其按列排成n乘m的矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>，设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><mi>X</mi><msup><mi>X</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">C=\frac{1}{m}XX^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>是一个对称矩阵，其对角线分别个各个向量的方差，而第i行j列和j行i列元素相同，表示i和j两个字段的协方差。<br />根据上述推导，我们发现要达到优化目前，等价于<strong>将协方差矩阵对角化</strong>：即除对角线外的其它元素化为0，并且在对角线上将元素按大小从上到下排列，这样我们就达到了优化目的。<br />一个n行n列的实对称矩阵一定可以找到n个单位正交特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>e</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>e</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>e</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">e_1,e_2,\cdots,e_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,组成矩阵E：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>e</mi><mn>1</mn></msub><mtext> </mtext><msub><mi>e</mi><mn>2</mn></msub><mtext> </mtext><mo>⋯</mo><mtext> </mtext><msub><mi>e</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E=(e_1 \ e_2 \ \cdots \ e_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>则对协方差矩阵C有如下结论：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mi>T</mi></msup><mi>C</mi><mi>E</mi><mo>=</mo><mi mathvariant="normal">Λ</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>λ</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>λ</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo>⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>λ</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">E^TCE=\Lambda =\left(\begin{array}{llll}\lambda_{1} &amp; &amp; &amp; \\&amp; \lambda_{2} &amp; &amp; \\&amp; &amp; \ddots &amp; \\&amp; &amp; &amp; \lambda_{n}\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>到这里，我们发现我们已经找到了需要的矩阵P：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><msup><mi>E</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">P=E^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p>P是协方差矩阵的特征向量单位化后按行排列出的矩阵，其中每一行都是C的一个特征向量。如果设P按照<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Λ</mi></mrow><annotation encoding="application/x-tex">\Lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Λ</span></span></span></span>中特征值的从大到小，将特征向量从上到下排列，则用P的前K行组成的矩阵乘以原始数据矩阵X，就得到了我们需要的降维后的数据矩阵Y。</p><h2 id="pca算法"><a class="markdownIt-Anchor" href="#pca算法"></a> PCA算法</h2><p>设有m条n维数据。</p><p>1）将原始数据按列组成n行m列矩阵X</p><p>2）将X的每一行（代表一个属性字段）进行零均值化，即减去这一行的均值</p><p>3）求出协方差矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><mi>X</mi><msup><mi>X</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">C=\frac{1}{m}XX^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></p><p>4）求出协方差矩阵的特征值及对应的特征向量</p><p>5）将特征向量按对应特征值大小从上到下按行排列成矩阵，取前k行组成矩阵P</p><p>6）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>=</mo><mi>P</mi><mi>X</mi></mrow><annotation encoding="application/x-tex">Y=PX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>即为降维到k维后的数据</p><hr /><p>参考：<br /><a href="http://blog.codinglabs.org/articles/pca-tutorial.html">http://blog.codinglabs.org/articles/pca-tutorial.html</a></p><p><a href="https://www.bilibili.com/video/BV1X54y1R7g7/?spm_id_from=333.337.search-card.all.click&amp;vd_source=7d4ddbfe6a66f2fbe94075935b693c57">https://www.bilibili.com/video/BV1X54y1R7g7/?spm_id_from=333.337.search-card.all.click&amp;vd_source=7d4ddbfe6a66f2fbe94075935b693c57</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>PCA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FL论文阅读笔记2</title>
    <link href="/2022/09/14/FL%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB2/"/>
    <url>/2022/09/14/FL%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB2/</url>
    
    <content type="html"><![CDATA[<p>《Incentivizing Federated Learning under Long-Term Energy Constraint via Online Randomized Auctions》<br />一种基于拍卖的在线激励机制</p><span id="more"></span><h1 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h1><p><a href="#abstract">abstract</a><br /><a href="#introduction">introduction</a><br /><a href="#related-work">related work</a><br /><a href="#model-and-problem-formulation">model and problem formulation</a><br /><a href="#overview-of-the-proposed-mechanism">overview of the proposed mechanism</a><br /><a href="#online-social-cost-minimization">online social cost minimization</a><br /><a href="#online-payment-allocation">online payment allocation</a><br /><a href="#experimental-study">experimental study</a></p><hr /><h1 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> abstract</h1><p>基于拍卖(auction-based)的在线激励机制FLORA，允许用户动态、重复提交出价(bids)，并根据每个用户的长期电池约束(long-term battery constraint)对这种出价进行补偿。提出了一个非线性混合整数规划(nonlinear mixed-integer program)来捕获FL中social cost的最小值。设计了fractional online algorithm和randomized rounding algorithm来选择中标(win bid)和控制训练精确度，payment allocation algorithm计算基于中标概率的报酬(remuneration)</p><h1 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> introduction</h1><p>考虑到移动设备的电池能量是有限的，许多用户不愿意参与联邦学习，因此设计一种机制激励用户的参与。让服务器担任拍卖人，进行拍卖，选择和购买移动设备提供的出价。移动端参与联邦学习后可能还有一些可利用的数据，但电量可能不支持下一次联邦学习。此外训练数据量、无线网络条件都不确定。<br />FLORA，通过拍卖来激励移动设备，并通过解决潜在的社会成本最小化问题来选择合适的投标参与联邦学习。<br />通过Langrange multipliers重新构造问题，并引入一个精心设计的不依赖于未来输入的正则化项(regularization term)，通过设计一个交替上升-下降在线算法(alternating ascent-descent online algorithm)，将问题放松到实数域，克服长期约束。<br />设计了一个随机舍入算法(randomized rounding algorithm)，在不违反瞬时约束的情况下，通过对相反方向的分数对进行舍入来将松弛问题的分数解转换为整数。<br />设计了以分数决策作为中标概率的支付分配算法(payment allocation algorithm)，通过边际成本的投标价格合成每次拍卖的支付</p><h1 id="related-work"><a class="markdownIt-Anchor" href="#related-work"></a> related work</h1><p>现有研究都没有从在线的角度来研究联邦学习激励机制</p><h1 id="model-and-problem-formulation"><a class="markdownIt-Anchor" href="#model-and-problem-formulation"></a> model and problem formulation</h1><h2 id="system-modeling"><a class="markdownIt-Anchor" href="#system-modeling"></a> system modeling</h2><p><strong>Server，Mobile Devices，and Training Data</strong>I个devices。考虑到系统是动态的，通过一系列time slots：1，2，···，T来研究，每个移动设备拥有一个数据集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>D</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mrow><mo fence="true">{</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">D_i^{(t)}=\left\{x_n,y_n\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 指的是features with corresponding values,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指的是ground-truth label。<br /><strong>Federated learning</strong>在一个time slot训练模型，使total loss最小<br /><strong>Auction</strong>竞标时每个设备作为投标人，上传一组数据，包含竞标的价格、首选的本地精度、本地原始数据集的大小、每次全局迭代耗费的计算能量和通信能量，服务器根据所有接收到的出价，通过解决社会成本最小化问题提出的算法来确定中标者，为了长期不断地从拍卖中获益，每个设备还需要向服务器提供电池容量，由用户自己指定，不大于剩余电量。对于拍卖采用密封出价拍卖，只有拍卖人和设备知道出价。<br /><strong>Decision Variables</strong>决策变量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>∈</mo><mrow><mo fence="true">{</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">x_i^{(t)}\in\left\{1,0\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>,表示移动设备i是否竞标成功。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>δ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta^{(t)}\in(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9270999999999999em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>,表示所有参与设备的最大本地精确度，这决定了在该time slot内需要执行的全局迭代次数。特别地，考虑到全局精确度，我们控制本地精确度来控制模型达到全局精确度所需要的成本。<br /><strong>cost of mobile Devices</strong><br /><strong>cost of server</strong><br /><strong>Formulation</strong>最小化社会成本、确保在时间段内每个移动设备的能耗考虑到电池容量、捕获最大局部精度、保证每个时间段的FL过程使用足够的训练数据。</p><h1 id="overview-of-the-proposed-mechanism"><a class="markdownIt-Anchor" href="#overview-of-the-proposed-mechanism"></a> overview of the proposed mechanism</h1><p>FLORA作为算法1，调用算法2、3、4，算法1是总体控制算法，在服务器上执行，算法2和3分别是在线分数算法和随机舍入算法，共同确定投标的设备，算法4支付。</p><h1 id="online-social-cost-minimization"><a class="markdownIt-Anchor" href="#online-social-cost-minimization"></a> online social cost minimization</h1><p><strong>online fractional algorithm</strong><br /><strong>randomized rounding algorithm</strong><br /><strong>regret and fit analysis</strong></p><h1 id="online-payment-allocation"><a class="markdownIt-Anchor" href="#online-payment-allocation"></a> online payment allocation</h1><p>设计了支付分配算法来为选定的投标人计算报酬。定义了economic properties of truthfulness和individual rationality，并证明了提出的方法满足这两个属性。<br />定义了utility，在此基础上将truthfulness和individual rationality定义为两个经济属性<br /><strong>utility</strong><br /><img src="https://s1.imagehub.cc/images/2022/09/14/Snipaste_2022-09-14_22-57-22.png" alt="" /><br />其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>b</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">b_i^{(t)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span>是竞标价格，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>b</mi><mrow><mo>−</mo><mi>i</mi></mrow><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">b_{-i}^{(t)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3799949999999999em;vertical-align:-0.3351949999999999em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3351949999999999em;"><span></span></span></span></span></span></span></span></span></span>是除<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>外的所有竞标价格<br /><strong>Truthfulness</strong>如果每个出价最大化其期望效用出价的真实成本，则这个随机拍卖的期望是truthfulness<br /><strong>individual rationality</strong>如果每个出价总有一个非负效用，则随机拍卖在期望中是individual rationlity的</p><h1 id="experimental-study"><a class="markdownIt-Anchor" href="#experimental-study"></a> experimental study</h1><p>用手写数字分类数据集MNIST和图像分类数据集fashion-MINIST进行联邦学习，在MINIST上训练Multi-Layer Perception(MLP)模型，该模型有一个全连接层，一个ReLU激活层，一个drop-out layer，一个作为隐藏层的全连接层，最后是一个softmax输出层。<br />在MNIST上训练CNN，CNN有两个3×3卷积层，分别有16个channels和32个channels，其后有ReLU激活和2×2max pooling，一个全连接层，最后是softmax输出层。<br />在Fashion-MNIST上训练Multinomial Logistic Regression(MLR)模型，由一个全连接层和一个softmax输出层组成。</p>]]></content>
    
    
    
    <tags>
      
      <tag>FL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FL论文阅读笔记1</title>
    <link href="/2022/09/13/%E8%81%94%E9%82%A6%E9%87%8F%E5%8C%96%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%AD%E8%83%BD%E9%87%8F%E3%80%81%E7%B2%BE%E5%BA%A6%E5%92%8C%E7%B2%BE%E5%BA%A6%E7%9A%84%E6%9D%83%E8%A1%A1/"/>
    <url>/2022/09/13/%E8%81%94%E9%82%A6%E9%87%8F%E5%8C%96%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%AD%E8%83%BD%E9%87%8F%E3%80%81%E7%B2%BE%E5%BA%A6%E5%92%8C%E7%B2%BE%E5%BA%A6%E7%9A%84%E6%9D%83%E8%A1%A1/</url>
    
    <content type="html"><![CDATA[<p>《On the Tradeoff between Energy, Precision, and Accuracy in Federated Quantized Neural Networks》论文阅读笔记</p><span id="more"></span><h1 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h1><p><a href="#abstract">abstract</a><br /><a href="#introduction">introduction</a><br /><a href="#system-model">system model</a><br /><a href="#proposed-approach-for-energy-efficient-federated-qnn">Proposed approach for energy-efficient federated QNN</a><br /><a href="#simulation-results">simulation results</a></p><hr /><h1 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> abstract</h1><p>先前的FL通常在训练DNN的时候用32位精度的数据，用来提高准确性。但DNN会执行数百万的操作，这让一些设备无法完成这样的算法。因此，训练具有高精度水平的DNN会导致FL的高能量成本。本文提出了一个量化的FL框架，在本地和上行链路传输中以有限的精度表示数据。<br />在这里，有限的精度水平是通过使用QNN(quantized neural networks)量化权重(weights)和激活(activations)的固定精度格式捕获。<br />在所考虑的FL模型中，每个设备训练其QNN，并将量化的训练结果传输给基站。局部训练和量子化传输的能量模型是经过严格推导的。在保证收敛的前提下从精度的角度出发提出了能量最小化问题。首先推导出FL的收敛速度(convergence rate)并使用了一个线性搜索法(line search method)，仿真结果表明该FL框架减少53%能源消耗。</p><h1 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> introduction</h1><p>FL由许多mobile devices和一个central server共同合作训练一个共享的模型而不需要设备共享原始数据。<br />精度带来很大的计算和储存需求，而降低的精度水平可能会引入量化噪声，从而降低 FL 的精度和收敛速度(convergence rate)<br />文章提出了基于处理芯片物理框架的energy model，还推到了考虑量子化的上行传输(uplink transmission)能量模型</p><h1 id="system-model"><a class="markdownIt-Anchor" href="#system-model"></a> system model</h1><h2 id="quantized-neural-networks量化神经网络"><a class="markdownIt-Anchor" href="#quantized-neural-networks量化神经网络"></a> Quantized Neural Networks(量化神经网络)</h2><p>在模型中，每个device训练相同结构的QNN，用n位精度进行量化。提高n可以使数据更精确但同时使用更多能量。<br />用fixed-point格式表示数字 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi mathvariant="normal">Ω</mi><mi mathvariant="normal">.</mi><mi>ω</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\Omega.\omega]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">Ω</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">]</span></span></span></span> ,其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ω</mi></mrow><annotation encoding="application/x-tex">\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span></span></span></span> 分别表示整数和小数，用1个bit表示整数，n-1个bits表示小数，QNN将权值限制在[-1,1],我们可以表示的最小数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>=</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">k=2^{-n+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>,表示的范围就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1,1-2^{-n+1}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>.我们考虑一个随机量子化方案(stochastic quantization scheme)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mo fence="true">⌊</mo><mi>ω</mi><mo fence="true">⌋</mo></mrow><mo separator="true">,</mo><mtext>    </mtext><mi mathvariant="normal">可</mi><mi mathvariant="normal">能</mi><mi mathvariant="normal">性</mi><mi mathvariant="normal">为</mi><mfrac><mrow><mrow><mo fence="true">⌊</mo><mi>x</mi><mo fence="true">⌋</mo></mrow><mo>+</mo><mi>k</mi><mo>−</mo><mi>ω</mi></mrow><mi>k</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mo fence="true">⌊</mo><mi>ω</mi><mo fence="true">⌋</mo></mrow><mo>+</mo><mi>k</mi><mo separator="true">,</mo><mtext> </mtext><mi mathvariant="normal">可</mi><mi mathvariant="normal">能</mi><mi mathvariant="normal">性</mi><mi mathvariant="normal">为</mi><mfrac><mrow><mi>ω</mi><mo>−</mo><mrow><mo fence="true">⌊</mo><mi>ω</mi><mo fence="true">⌋</mo></mrow></mrow><mi>k</mi></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">Q(\omega)=\left\{\begin{matrix}\left \lfloor \omega \right \rfloor ,\ \ \ \ 可能性为\frac{\left \lfloor x \right \rfloor +k-\omega }{k}\\\left \lfloor \omega \right \rfloor + k,\ 可能性为\frac{\omega-\left \lfloor \omega \right \rfloor}{k}\end{matrix}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">Q</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6199999999999999em;"><span style="top:-3.6199999999999997em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">⌊</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose delimcenter" style="top:0em;">⌋</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">⌊</span></span><span class="mord mathdefault mtight">x</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">⌋</span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2499999999999996em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">⌊</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose delimcenter" style="top:0em;">⌋</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">⌊</span></span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">⌋</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1200000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">⌊</mo><mi>ω</mi><mo fence="true">⌋</mo></mrow><annotation encoding="application/x-tex">\left \lfloor \omega \right \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">⌊</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose delimcenter" style="top:0em;">⌋</span></span></span></span></span>是k小于或等于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ω</mi></mrow><annotation encoding="application/x-tex">\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span></span></span></span>的最大整数倍<br />经过输入多个layers，用SGD梯度下降更新参数</p><h2 id="fl-model"><a class="markdownIt-Anchor" href="#fl-model"></a> FL model</h2><p>使用FedAvg，在每个全局迭代中，BS随机选择一组设备(k个)，将现有的global model <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>ω</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\omega_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>广播到预定的设备，这k个设备计算模型更新，并将QNN中相同的量子化方案(qiantization scheme)，然后设备将更新的模型传输给BS，然后BS平均这些更新得到新的global model。重复这个过程直到global loss收敛到一个目标精度约束。</p><h2 id="computing-and-transmission-model"><a class="markdownIt-Anchor" href="#computing-and-transmission-model"></a> Computing and Transmission model</h2><h3 id="computing-model"><a class="markdownIt-Anchor" href="#computing-model"></a> Computing model</h3><p>我们考虑一个典型的CNN二维处理芯片，它有并行神经元阵列、p MAC单元和两级储存器：一个主储存器和一个本地缓冲器。主储存器储存当前层的权重和激活，本地缓冲区缓存当前使用的权重和激活。<br />一次MAC操作包括output计算、batch normalization、activation和更新权重。消耗的能力和数据的精度n有关。<br />设备在一次迭代中局部训练的能量消耗是computing energy、从缓冲区获取权重weight的access energy和从缓冲区获取activations的access energy。<br />从一个主缓冲区获取权重到一个本地缓冲区，之后它们可以在本地缓冲区中重用，由 p MAC 单元组成的二维 MAC 数组，因此它们可以将提取的权重与相同的行和列共享。可以减少对本地缓冲区的访问。</p><h3 id="transmission-model"><a class="markdownIt-Anchor" href="#transmission-model"></a> Transmission Model</h3><p>使用orthogonal frequency domain multiple access(OFDMA)向BS传输模型更新</p><h1 id="proposed-approach-for-energy-efficient-federated-qnn"><a class="markdownIt-Anchor" href="#proposed-approach-for-energy-efficient-federated-qnn"></a> Proposed approach for energy-efficient federated QNN</h1><p>可以用line search method找到local optimal solution(局部最优解)，在给定的目标精度下使能量消耗最少。</p><h1 id="simulation-results"><a class="markdownIt-Anchor" href="#simulation-results"></a> simulation results</h1><p>设定QNN框架三层卷积层：3×3×64，3×3×64，3×3×256，一层全连接层，每个全连接层后面有2×2 max pooling<br />随着精度n增大，总的能量消耗先减小后增大，这是因为当n较小时，quantization error很大，减缓了收敛速度，n过大时local training和transmission的能量大。<br />当local iteration增加，最佳精度水平下降，这是因为当SGD计算出quantization error的影响时local model会更快收敛到局部最优。<br />model size越大，最佳精度水平越高，quantization error随着model size的增加而积累，这会影响收敛速度，因此为了减少quantization error，可以选择更高的精度</p>]]></content>
    
    
    
    <tags>
      
      <tag>FL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《DEBERTA》论文阅读笔记</title>
    <link href="/2022/09/04/%E3%80%8ADEBERTA%E3%80%8B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/09/04/%E3%80%8ADEBERTA%E3%80%8B%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="1-摘要"><a class="markdownIt-Anchor" href="#1-摘要"></a> 1 摘要</h2><p>DEBERT在BERT模型上添加了两种新的技术。<br />第一个是分离注意力机制（disentangled attention mechanism）, 每个单词用两个向量表示，代表其内容和位置，单词间的注意力权重（attention weights）用其内容和相对位置的disentangled matrices计算；<br />第二个是一个加强的mask decoder，用来在decoding layer合并绝对位置，在模型预训练时预测masked tokens；在合并绝对单词位置在softmax layer之前，合并时模型decode the masked words 基于聚合上下文的内容和位置嵌入<br />另外，采用新的虚拟对抗训练方法（virtual adversarial training）对模型进行微调，以改善模型的性能。<br />DeBERTa是一个用MLM（masked language modeling）预训练的模型。</p><h2 id="2-背景"><a class="markdownIt-Anchor" href="#2-背景"></a> 2 背景</h2><h3 id="21-transformer"><a class="markdownIt-Anchor" href="#21-transformer"></a> 2.1 transformer</h3><p>Transformer-based language model 是由Transformer blocks堆叠而成，每个block包含一个multi-head self-attention mechanism，其后是一个fully connected positional feed-forward network。标准的自注意力机制缺失一个自然的方式去encode word position information，所以现在的方法是给input word embedding一个positional bias，可以让输入的单词用一个由单词内容和位置组成值的向量，position bias 可以通过absolute position embedding或者relative position embedding实现，这显示出相对位置的重要，这个模型的不同正是由于用两个分开的向量去encode一个word的内容和位置，而单词间的attention weights用单词内容和相对位置的disentangled matrices计算</p><h3 id="22-masked-language-model"><a class="markdownIt-Anchor" href="#22-masked-language-model"></a> 2.2 masked language model</h3><p>PLMs通常在大规模的文本预先训练，使用self-supervision objective 学习上下文的单词表示,称为Masked Language Model（MLM）。具体来说，给一个序列X={x<sub>i</sub>},随机将其15%的tokens mask，然后训练一个用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>参数化的语言模型预测masked tokens去重构X。<br />BERT保持10%的masked tokens不变，另外10%替换成随机的picked tokens，其余替换成mask token</p><h1 id="3-deberta-框架"><a class="markdownIt-Anchor" href="#3-deberta-框架"></a> 3 DEBERTA 框架</h1><h2 id="31-disentagled-attention"><a class="markdownIt-Anchor" href="#31-disentagled-attention"></a> 3.1 Disentagled attention</h2><p>对于一个位置为i的token，把它用{H<sub>i</sub>}和{P<sub>i|j</sub>}两个向量表示，分别表示其内容和位置在j的token的相对位置，token i 和token j 之间的cross attention score可以分解为四个组成部分：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>A</mi><mi>i</mi></msub><msub><mo separator="true">,</mo><mi>j</mi></msub><mo>=</mo><mo stretchy="false">{</mo><msub><mi>H</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mrow><mi>i</mi><mi mathvariant="normal">∣</mi><mi>j</mi></mrow></msub><mo stretchy="false">}</mo><mo>×</mo><mo stretchy="false">{</mo><msub><mi>H</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mrow><mi>j</mi><mi mathvariant="normal">∣</mi><mi>i</mi></mrow></msub><msup><mo stretchy="false">}</mo><mi>T</mi></msup><mspace linebreak="newline"></mspace><mo>=</mo><msub><mi>H</mi><mi>i</mi></msub><msubsup><mi>H</mi><mi>j</mi><mi>T</mi></msubsup><mo>+</mo><msub><mi>H</mi><mi>i</mi></msub><msubsup><mi>P</mi><mrow><mi>j</mi><mi mathvariant="normal">∣</mi><mi>i</mi></mrow><mi>T</mi></msubsup><mo>+</mo><msub><mi>P</mi><mrow><mi>i</mi><mi mathvariant="normal">∣</mi><mi>j</mi></mrow></msub><msubsup><mi>H</mi><mi>j</mi><mi>T</mi></msubsup><mo>+</mo><msub><mi>P</mi><mrow><mi>i</mi><mi mathvariant="normal">∣</mi><mi>j</mi></mrow></msub><msubsup><mi>P</mi><mrow><mi>j</mi><mi mathvariant="normal">∣</mi><mi>i</mi></mrow><mi>T</mi></msubsup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">A_i,_j=\lbrace H_i,P_{i|j} \rbrace × \lbrace H_j,P_{j|i} \rbrace ^T\\=H_iH_j^T+H_iP_{j|i}^T+P_{i|j}H_j^T+P_{i|j}P_{j|i}^T\tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct"><span class="mpunct">,</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2465309999999998em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.274439em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3383309999999997em;vertical-align:-0.4469999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.274439em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3383309999999997em;vertical-align:-0.4469999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:1.338331em;vertical-align:-0.4469999999999999em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>一对单词的attention weigth可以用disentangled matrices由四个attention scores 的和算出，分别是content-to-content，content-to-position，position-to-content, and position-to-position<br />现存的方法在计算attention weights时是用separate embedding matrix计算relative position bias，这等于只用content-to-content and content-to-position，但relative position 还要包含position-to-content，这个非常重要<br />用relative position bias表示disentangled self-attention</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>Q</mi><mi>c</mi></msub><mo>=</mo><mi>H</mi><msub><mi>W</mi><mrow><mi>q</mi><mo separator="true">,</mo><mi>c</mi></mrow></msub><mo separator="true">,</mo><msub><mi>K</mi><mi>c</mi></msub><mo>=</mo><mi>H</mi><msub><mi>W</mi><mrow><mi>k</mi><mi mathvariant="normal">.</mi><mi>c</mi></mrow></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>c</mi></msub><mo>=</mo><mi>H</mi><mi>W</mi><mrow><mi>v</mi><mo separator="true">,</mo><mi>c</mi></mrow><mo separator="true">,</mo><msub><mi>Q</mi><mi>r</mi></msub><mo>=</mo><mi>P</mi><msub><mi>W</mi><mrow><mi>q</mi><mo separator="true">,</mo><mi>r</mi></mrow></msub><mo separator="true">,</mo><msub><mi>K</mi><mi>r</mi></msub><mo>=</mo><mi>P</mi><msub><mi>W</mi><mrow><mi>k</mi><mo separator="true">,</mo><mi>r</mi></mrow></msub><mspace linebreak="newline"></mspace><msub><mover accent="true"><mi>A</mi><mo>~</mo></mover><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><munder><munder><mrow><msubsup><mi>Q</mi><mi>i</mi><mi>c</mi></msubsup><msubsup><mi>K</mi><mi>j</mi><mrow><mi>c</mi><mi>T</mi></mrow></msubsup></mrow><mo stretchy="true">⏟</mo></munder><mtext>(a)content-to-content</mtext></munder><mo>+</mo><munder><munder><mrow><msubsup><mi>Q</mi><mi>i</mi><mi>c</mi></msubsup><msubsup><mi>K</mi><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><mrow><mi>r</mi><mo separator="true">,</mo><mi>T</mi></mrow></msubsup></mrow><mo stretchy="true">⏟</mo></munder><mtext>(b)content-to-position</mtext></munder><mo>+</mo><munder><munder><mrow><msubsup><mi>K</mi><mi>j</mi><mi>c</mi></msubsup><msubsup><mi>Q</mi><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup></mrow><mo stretchy="true">⏟</mo></munder><mtext>(c)position-to-content</mtext></munder><mspace linebreak="newline"></mspace><msub><mi>H</mi><mi>o</mi></msub><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mover accent="true"><mi>A</mi><mo>~</mo></mover><msqrt><mrow><mn>3</mn><mi>d</mi></mrow></msqrt></mfrac><mo stretchy="false">)</mo><msub><mi>V</mi><mi>c</mi></msub></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Q_c=HW_{q,c},K_c=HW_{k.c},V_c=HW{v,c},Q_r=PW_{q,r},K_r=PW_{k,r}\\\tilde{A}_{i,j}=\underbrace{Q_i^c K_j^{cT}}_{\text{(a)content-to-content}}+\underbrace{Q_i^cK_{\delta(i,j)}^{r,T}}_{\text{(b)content-to-position}}+\underbrace{K_j^c Q_{\delta(j,i)}^T}_{\text{(c)position-to-content}} \\H_o=softmax(\frac{\tilde{A}}{\sqrt{3d}})V_c\tag{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">.</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.2062979999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;">~</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.822439em;vertical-align:-1.931108em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913310000000001em;"><span style="top:-1.243892em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">(a)content-to-content</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span class="svg-align" style="top:-1.9688919999999999em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0311080000000001em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.931108em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.022439em;vertical-align:-2.0631999999999997em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9592390000000002em;"><span style="top:-1.1118000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">(b)content-to-position</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9592390000000001em;"><span class="svg-align" style="top:-1.8368000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9592389999999998em;"><span style="top:-2.3598em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03785em;">δ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1631999999999998em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0631999999999997em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.8863309999999998em;vertical-align:-1.9949999999999999em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-1.1800000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">(c)position-to-content</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999998em;"><span class="svg-align" style="top:-1.905em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03785em;">δ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.095em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9949999999999999em;"><span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.52719em;vertical-align:-0.93em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5971899999999999em;"><span style="top:-2.17778em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.93222em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">3</span><span class="mord mathdefault">d</span></span></span><span style="top:-2.89222em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.10777999999999999em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;">~</span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.6603899999999996em;vertical-align:-2.0631999999999997em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>θ</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mtext>       </mtext><mi>f</mi><mi>o</mi><mi>r</mi><mtext>   </mtext><mi>i</mi><mo>−</mo><mi>j</mi><mo>≤</mo><mo>−</mo><mi>k</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>1</mn><mtext>    </mtext><mi>f</mi><mi>o</mi><mi>r</mi><mtext>    </mtext><mi>i</mi><mo>−</mo><mi>j</mi><mo>≥</mo><mi>k</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>−</mo><mi>j</mi><mo>+</mo><mi>k</mi><mtext>        </mtext><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>s</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\theta(i,j)=\left\{\begin{matrix}   0\ \ \ \ \ \ \ for\ \ \ i-j\le -k \\    2k-1 \ \ \ \ for\ \ \ \  i-j\ge k \\  i-j+k\ \ \ \ \ \ \ \ others\end{matrix}\right. \tag{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>A</mi><mo>~</mo></mover><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\tilde{A}_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2062979999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;">~</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是attention matrix<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>A</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;">~</span></span></span></span></span></span></span></span></span>的元素，代表token i到token j的attention score<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>Q</mi><mi>i</mi><mi>c</mi></msubsup></mrow><annotation encoding="application/x-tex">Q_i^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.941994em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Q</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">Q_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的第i行，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>K</mi><mi>j</mi><mi>c</mi></msubsup></mrow><annotation encoding="application/x-tex">K_j^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.078102em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">K_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的第i行</p><h4 id="311-效率"><a class="markdownIt-Anchor" href="#311-效率"></a> 3.1.1 效率</h4><p>对于长度为N的序列，需要空间复杂度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span>来为每个token储存relative position embedding<br />然而，拿content-to-position做例子，由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>2</mn><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta(i,j)\in[0,2k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>和所有可能的relative position embeddings经常是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>r</mi></msub><mo>∈</mo><msup><mi>R</mi><mrow><mn>2</mn><mi>k</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">K_r\in R^{2k×d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>的子集，所以可以在对所有queries的attention calculation重新利用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">K_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />在实验中把最大相关距离<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>设置成512进行预训练<br />不需要为每个query分配内存去储存relative position embedding，使时间复杂度降低至<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(kd)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span></p><h3 id="32-处理绝对单词位置的enhanced-mask-decoder"><a class="markdownIt-Anchor" href="#32-处理绝对单词位置的enhanced-mask-decoder"></a> 3.2 处理绝对单词位置的enhanced mask decoder</h3><p>预训练DEBERTa的MLM是一个用围绕在mask token周围的words去预测masked word的模型。disentangled attention 已经考虑的相对位置，绝对位置在Transformer layers之后和softmax layer之前被合并用于masked token的预测<br /><img src="https://s1.imagehub.cc/images/2022/09/06/Snipaste_2022-09-06_20-58-30.png" alt="" /><br />以这种方式，DEBERTa在所有Transformer layers捕获relative position，但只在deecoding masked words时用absolute position作为互补的信息。这个decoding部分称为Enhanced Mask Decoder（EMD）</p><h2 id="4-scale-invariant-fine-tuning"><a class="markdownIt-Anchor" href="#4-scale-invariant-fine-tuning"></a> 4 SCALE INVARIANT FINE-TUNING</h2><p>一种新的虚拟对抗训练算法SiFT<br />虚拟对抗训练可以提高模型泛化能力。<br />普通的虚拟对抗模型嵌入向量的值域(范数)在不同的词和模型之间是不同的。对于具有数十亿参数的较大模型，方差变得更大，从而导致对抗训练的一些不稳定性。<br />但SiFT通过将干扰应用在normalized word embedding提高稳定性。将单词嵌入向量归一化为随机向量，然后对归一化嵌入向量进行扰动处理。</p>]]></content>
    
    
    
    <tags>
      
      <tag>解耦</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机视觉基础实验</title>
    <link href="/2022/09/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/"/>
    <url>/2022/09/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<p>本文实现了基础的图像预处理、图像增强、图像分割和图像检索</p><span id="more"></span><h1 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h1><p><a href="#%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86">图像处理</a><br /><a href="#%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2">图像检索</a></p><hr /><h2 id="图像处理"><a class="markdownIt-Anchor" href="#图像处理"></a> 图像处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>im=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&quot;</span>)<br>im_L = im.convert(<span class="hljs-string">&quot;L&quot;</span>) <br>box = (<span class="hljs-number">560</span>,<span class="hljs-number">1000</span>,<span class="hljs-number">1800</span>,<span class="hljs-number">1800</span>)<br>region = im_L.crop(box)<br>region.save(<span class="hljs-string">&quot;d:\\3.jpg&quot;</span>) <span class="hljs-comment">#region是一个新的图像对象</span><br>region.show()<br>im1 = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data\\1.jpg&quot;</span>)<br>im2 = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data\\2.jpg&quot;</span>)<br>r1,g1,b1 = im1.split()<br>r2,g2,b2 = im2.split()<br><span class="hljs-comment">#print(r1.mode,r1.size,g1.mode,g1.size)</span><br><span class="hljs-comment">#print(r2.mode,r2.size,g2.mode,g2.size)</span><br>new_im=[r1,g2,b2]<br><span class="hljs-comment">#print(len(new_im))</span><br>im_merge = Image.merge(<span class="hljs-string">&quot;RGB&quot;</span>,new_im)<br>im_merge.show()<br></code></pre></td></tr></table></figure><ul><li>image = image.convert()是图像实例对象的一个方法，接受一个mode参数，用以指定一个色彩模式 L：8位像素，黑白</li><li>Image.crop(left，up，right，below)对图片进行切割</li><li>Image.split()方法用于将图像分成单独的波段。此方法从图像返回单个图像带的元组。分割“RGB”图像会创建三个新图像，每个图像都包含一个原始波段(红色，绿色，蓝色)的副本。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> pylab <span class="hljs-keyword">import</span> *<br><span class="hljs-comment"># 读取图像到数组中</span><br>im = array(Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&#x27;</span>))<br><span class="hljs-comment"># 绘制图像</span><br>imshow(im)<br><span class="hljs-comment"># 一些点</span><br>x = [<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">400</span>,<span class="hljs-number">400</span>]<br>y = [<span class="hljs-number">200</span>,<span class="hljs-number">500</span>,<span class="hljs-number">200</span>,<span class="hljs-number">500</span>]<br><span class="hljs-comment"># 使用红色星状标记绘制点</span><br>plot(x,y,<span class="hljs-string">&#x27;r*&#x27;</span>)<br><span class="hljs-comment"># 绘制连接前两个点的线</span><br>plot(x[:<span class="hljs-number">2</span>],y[:<span class="hljs-number">2</span>])<br><span class="hljs-comment"># 添加标题，显示绘制的图像</span><br>title(<span class="hljs-string">&#x27;Plotting: &quot;empire.jpg&quot;&#x27;</span>)<br>show()<br></code></pre></td></tr></table></figure><p><img src="https://s1.imagehub.cc/images/2022/09/02/outpvut.png" alt="" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> ImageEnhance<br><span class="hljs-comment">#原始图像</span><br>image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&quot;</span>)<br>image.show()<br><span class="hljs-comment">#亮度增强</span><br>enh_bri = ImageEnhance.Brightness(image) <br>brightness = <span class="hljs-number">1.5</span><br>image_brightened = enh_bri.enhance(brightness) <br>image_brightened.show()<br></code></pre></td></tr></table></figure><ul><li>ImageEnhance.Brightness(image)创建一个调整图像亮度的增强对象</li><li>enhance()的参数brightness决定着图像的亮度情况</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#对比度增强</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> ImageEnhance<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> ImageFilter<br><span class="hljs-comment">#原始图像</span><br>image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&quot;</span>)<br>image.show()<br><span class="hljs-comment">#对比度增强</span><br>enh_con = ImageEnhance.Contrast(image)<br>contrast = <span class="hljs-number">1.5</span><br>image_contrasted = enh_con.enhance(contrast)<br>image_contrasted.show()<br><span class="hljs-comment">#锐度增强</span><br>enh_sha = ImageEnhance.Sharpness(image)<br>sharpness = <span class="hljs-number">3.0</span><br>image_sharped = enh_sha.enhance(sharpness)<br>image_sharped.show()<br><span class="hljs-comment">#图像模糊</span><br>im = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&quot;</span>)<br>im_blur = im.<span class="hljs-built_in">filter</span>(ImageFilter.BLUR)<br>im_blur.show()<br><span class="hljs-comment">#轮廓提取</span><br>im = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&quot;</span>)<br>im_contour = im.<span class="hljs-built_in">filter</span>(ImageFilter.CONTOUR)<br>im_contour.show()<br><span class="hljs-comment">#细节增强</span><br>im = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&quot;</span>)<br>im_contour = im.<span class="hljs-built_in">filter</span>(ImageFilter.DETAIL)<br>im_contour.show()<br></code></pre></td></tr></table></figure><ul><li>ImageFilter.BLUR为模糊滤波，处理之后的图像会整体变得模糊。</li><li>ImageFilter.CONTOUR为轮廓滤波，将图像中的轮廓信息全部提取出来。</li><li>ImageFilter.DETAIL为细节增强滤波，会使得图像中细节更加明显。<br /><img src="https://s1.imagehub.cc/images/2022/09/02/Snipaste_2022-09-02_11-53-50.png" alt="" /></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#画直方图</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>img=np.array(Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data//1.jpg&quot;</span>).convert(<span class="hljs-string">&#x27;L&#x27;</span>))<br>plt.figure(<span class="hljs-string">&quot;lena&quot;</span>) <span class="hljs-comment">#对灰度图像(lena)进行处理</span><br>arr=img.flatten() <span class="hljs-comment">#返回一个一维数组</span><br>n, bins, patches = plt.hist(arr, bins=<span class="hljs-number">256</span>, color=<span class="hljs-string">&#x27;green&#x27;</span>, alpha=<span class="hljs-number">0.75</span>)<br><span class="hljs-comment">#绘制直方图</span><br>plt.show()<br></code></pre></td></tr></table></figure><ul><li>bins: 直方图的柱数，即要分的组数</li><li>normed: 是否将得到的直方图向量归一化，即显示占比</li><li>alpha: 透明度<br /><img src="https://s1.imagehub.cc/images/2022/09/02/outprut.png" alt="" /></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#图像分割</span><br><span class="hljs-comment"># 图片二值化</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&#x27;</span>)<br><span class="hljs-comment"># 模式 L”为灰色图像，它的每个像素用 8 个 bit 表示，0 表示黑，255 表示白，其他数字表示不同的灰度。</span><br>Img = img.convert(<span class="hljs-string">&#x27;L&#x27;</span>)<br><span class="hljs-comment">#Img.save(&quot;C:\\Users\\86156\\Desktop\\备用图床\\0494e945880511ebb6edd017c2d2eca2.png&quot;)</span><br><span class="hljs-comment"># 自定义灰度界限，大于这个值为黑色，小于这个值为白色</span><br>threshold = <span class="hljs-number">100</span> <span class="hljs-comment">#灰度界限</span><br>table = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>    <span class="hljs-keyword">if</span> i &lt; threshold:<br>        table.append(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">else</span>:<br>        table.append(<span class="hljs-number">1</span>)<br><span class="hljs-comment"># 图片二值化</span><br>photo = Img.point(table, <span class="hljs-string">&#x27;1&#x27;</span>) <span class="hljs-comment">#将table转换成图像</span><br>photo.show()<br></code></pre></td></tr></table></figure><p><img src="https://s1.imagehub.cc/images/2022/09/02/Snipaste_2022-09-02_11-56-36.png" alt="" /></p><hr /><h2 id="图像检索"><a class="markdownIt-Anchor" href="#图像检索"></a> 图像检索</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> scipy<br><span class="hljs-keyword">import</span> scipy.spatial<br><span class="hljs-keyword">from</span> cv2 <span class="hljs-keyword">import</span> imread<br><span class="hljs-keyword">import</span> pickle <br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> matplotlib.image <span class="hljs-keyword">as</span> mpimg<br><span class="hljs-comment"># 特征提取</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">extract_features</span>(<span class="hljs-params">image_path, vector_size=<span class="hljs-number">32</span></span>):<br>    image = imread(image_path)<span class="hljs-comment">#imread函数从文件中加载图像并返回该图像</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 可选的特征检测算法有 BRISK,AKAZE,KAZE 以及 ORB</span><br>        <span class="hljs-comment"># 关键点检测</span><br>        alg = cv2.BRISK_create() <span class="hljs-comment">#特征检测算法</span><br>        <span class="hljs-comment"># alg = cv2.AKAZE_create()</span><br>        <span class="hljs-comment"># alg = cv2.KAZE_create()</span><br>        <span class="hljs-comment"># alg = cv2.ORB_create()</span><br>        kps = alg.detect(image) <span class="hljs-comment">#提取image的特征</span><br>        <span class="hljs-comment"># 选取前 vector_size=32 个特征点</span><br>        <span class="hljs-comment"># 特征点的个数取决于图像的大小以及颜色分布</span><br>        <span class="hljs-comment"># 按照关键点响应值对特征点进行排序</span><br>        kps = <span class="hljs-built_in">sorted</span>(kps, key=<span class="hljs-keyword">lambda</span> x: -x.response)[:vector_size]<br>        <span class="hljs-comment"># 计算特征点上对应的特征向量</span><br>        kps, dsc = alg.compute(image, kps)<br>        <span class="hljs-comment"># 将所有的特征向量组成一个大的特征值</span><br>        dsc = dsc.flatten()<br>        <span class="hljs-comment"># 预定义一个维度为 64*vector_size 的特征向量</span><br>        needed_size = (vector_size * <span class="hljs-number">64</span>)<br>        <span class="hljs-keyword">if</span> dsc.size &lt; needed_size:<br>            <span class="hljs-comment"># 如果计算得到的特征向量小于预定义的大小，则在向量末尾补零</span><br>            dsc = np.concatenate([dsc, np.zeros(needed_size - dsc.size)])<br>    <span class="hljs-keyword">except</span> cv2.error <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Error: &#x27;</span>, e)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">return</span> dsc<br></code></pre></td></tr></table></figure><p>特征提取函数，输入想要提取的图片的路径(image_path)，提取该图片的特征</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">batch_extractor</span>(<span class="hljs-params">images_path, pickled_db_path=<span class="hljs-string">&quot;data/feature.txt&quot;</span></span>):<br>    files = [os.path.join(images_path, p) <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(os.listdir(images_path))]<br>    result = &#123;&#125;<br>    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> files:<br>        <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Extracting features from image %s&#x27;</span> % f)<br>        name = f.split(<span class="hljs-string">&#x27;/&#x27;</span>)[-<span class="hljs-number">1</span>].lower()<br>        result[name] = extract_features(f)<br><span class="hljs-comment"># 将所有特征保存在 pickle 文件里</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(pickled_db_path, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> fp: <span class="hljs-comment"># 以二进制写入</span><br>        pickle.dump(result, fp)<br></code></pre></td></tr></table></figure><p>在pickled_db_path路径建立一个文件，输入的image_path为一个文件夹，文件夹中为想要对比的几张图片，依次将图片的信息写入文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Matcher</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, pickled_db_path=<span class="hljs-string">&quot;data/feature.txt&quot;</span></span>):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(pickled_db_path,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> fp:<br>            self.data = pickle.load(fp) <span class="hljs-comment">#用于将二进制对象文件转换成 Python 对象</span><br>        self.names = []<br>        self.matrix = []<br>        <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> self.data.items():<br>            self.names.append(k)<br>            self.matrix.append(v)<br>        self.matrix = np.array(self.matrix)<br>        self.names = np.array(self.names)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">cdist</span>(<span class="hljs-params">self, vector</span>):<br>    <span class="hljs-comment"># 计算图像之间的 cosine 距离</span><br>        v = vector.reshape(<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> scipy.spatial.distance.cdist(self.matrix, v, <span class="hljs-string">&#x27;cosine&#x27;</span>).reshape(-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">match</span>(<span class="hljs-params">self, image_path, topn=<span class="hljs-number">5</span></span>):<br>        features = extract_features(image_path)<br>        img_distances = self.cdist(features)<br>        <span class="hljs-comment"># 找到排名前 5 的匹配结果</span><br>        nearest_ids = np.argsort(img_distances)[:topn].tolist()<br>        nearest_img_paths = self.names[nearest_ids].tolist()<br>        <span class="hljs-keyword">return</span> nearest_img_paths, img_distances[nearest_ids].tolist() <span class="hljs-comment">#tolist将矩阵转换成列表</span><br></code></pre></td></tr></table></figure><p>定义一个类Matcher，在类中实现函数：cdist()计算cosine距离；match()找到和image_path这张图最相似的topn张图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">show_img</span>(<span class="hljs-params">path</span>):<br>    img = mpimg.imread(path)<br>    plt.imshow(img)<br>    plt.show()<br></code></pre></td></tr></table></figure><p>将图片输出的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>():<br>    images_path = <span class="hljs-string">&#x27;data//images&#x27;</span> <br>    files = [os. path.join(images_path, p) <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">sorted</span>(os.listdir(images_path))]<br>    <span class="hljs-comment"># 打乱数据库中的图像顺序</span><br>    sample = random.sample(files, <span class="hljs-number">3</span>)<br>    batch_extractor(images_path)<br>    ma = Matcher(<span class="hljs-string">&#x27;data/feature.txt&#x27;</span>)<br>    <span class="hljs-comment"># 查询图像名称</span><br>    s = <span class="hljs-string">&#x27;data/2.jpg&#x27;</span> <br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Query image ==========================================&#x27;</span>)<br>    show_img(s)<br>    names, <span class="hljs-keyword">match</span> = ma.<span class="hljs-keyword">match</span>(s, topn=<span class="hljs-number">3</span>)<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Result images ========================================&#x27;</span> )<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>    <span class="hljs-comment"># 计算 cosine 距离，将相似性定义为 1-cosine 距离，当两个图像越近，此值相似指越高</span><br>        <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Match %s&#x27;</span> % (<span class="hljs-number">1</span>-<span class="hljs-keyword">match</span>[i]))<br>        show_img(os.path.join(<span class="hljs-string">&#x27;data//&#x27;</span>, names[i]))<br>run() <span class="hljs-comment">#运行从这里开始</span><br></code></pre></td></tr></table></figure><p>输出结果如下：</p><p>Extracting features from image data//images\1000.png<br />Extracting features from image data//images\1001.png<br />Extracting features from image data//images\1002.png<br />Extracting features from image data//images\1003.png<br />Extracting features from image data//images\1004.png<br />Extracting features from image data//images\1007.png<br />Extracting features from image data//images\1008.png<br />Extracting features from image data//images\1009.png<br />Extracting features from image data//images\1010.png<br />Query image ==========================================<br /><img src="https://s1.imagehub.cc/images/2022/09/02/outpubt.png" alt="" /><br />Result images ========================================<br />Match 0.7166246434214855<br /><img src="https://s1.imagehub.cc/images/2022/09/02/outpgut.png" alt="" /><br />Match 0.7156440097021429<br /><img src="https://s1.imagehub.cc/images/2022/09/02/outptut.png" alt="" /><br />Match 0.7029691317235767<br /><img src="https://s1.imagehub.cc/images/2022/09/02/outpunt.png" alt="" /></p>]]></content>
    
    
    
    <tags>
      
      <tag>CV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《Disentangled Self-Attentive Neural Networks for Click-Through Rate Prediction》论文笔记</title>
    <link href="/2022/09/01/%E3%80%8ADisentangled-Self-Attentive-Neural-Networks-for-Click-Through-Rate-Prediction%E3%80%8B%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/09/01/%E3%80%8ADisentangled-Self-Attentive-Neural-Networks-for-Click-Through-Rate-Prediction%E3%80%8B%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h1><p>CTR是一个排序模型，CTR预测的数据具有稀疏性和高维的特点。对于排序模型而言，特征交叉很关键</p><p>FM通过为特征分配latent factors实现特征自动交叉<br />W&amp;D框架在DNN的基础上引入Wide模型学习显式特征交叉<br />FM 通常只适合学习低阶（2-order）交叉特征，W&amp;D 框架的 wide 部分与 LR 类似，需要人工设计交叉特征，工作量较大。DeepFM 在 W&amp;D 框架基础上，将其 wide 部分替换为能自动抽取低阶交叉特征的 FM 组件，避免了特征工程且能端到端训练</p><p>建立高阶特征交互模型是进行有效预测的关键，通过自注意神经网络(self-attention)对特征向量进行点积计算，是一种有效方式，但点积是在两个特征之间进行，忽视了单个特征域(field)的影响，针对上述问题，论文提出 DESTINE结构，将一元(unary)特征重要性计算，从二阶特征交叉(pairwise interaction)解耦出来：一元项学习单个特征相对其他特征的重要度，二阶交叉项单纯地学习每个特征对的影响。</p><p>高阶特征交互建模的一个广泛使用的解决方案是计算特征嵌入的内积(inner product),每个特征对之间的点积注意力分数(the dot-product attention scores)可以被认为是每个特征对的重要性，为了建立任意顺序的特征交互模型，可以堆叠多层带残差连接（residual connections）的自注意网络<br />也就是说这个模型分为两部分，一部分是特征嵌入向量的点积，包含着每对特征的关系；一部分是一元特征模型，将一元项（unary term）从自注意网络中解耦（decouple），代表一个特征与其他所有特征的关系。</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>神经网络基础实验</title>
    <link href="/2022/08/31/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/"/>
    <url>/2022/08/31/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<p>本文介绍了基于numpy的回归神经网络,以及基于pytorch的回归神经网络和分类神经网络</p><span id="more"></span><h1 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h1><p><a href="#%E5%9F%BA%E4%BA%8Enumpy%E7%9A%84%E5%9B%9E%E5%BD%92%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C">基于numpy的回归神经网络</a><br /><a href="#%E5%9F%BA%E4%BA%8Epytorch%E7%9A%84%E5%9B%9E%E5%BD%92%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C">基于pytorch的回归神经网络</a><br /><a href="#%E5%9F%BA%E4%BA%8Epytorch%E7%9A%84%E5%88%86%E7%B1%BB%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C">基于pytorch的分类神经网络</a></p><hr /><h2 id="基于numpy的回归神经网络"><a class="markdownIt-Anchor" href="#基于numpy的回归神经网络"></a> 基于numpy的回归神经网络</h2><p><strong>实验目的</strong><br />1.了解反向传播网络的基本原理；<br />2.了解梯度下降法进行神经网络中的权值更新；<br />3.学习使用 numpy 编写简单的三层回归网络进行回归实验。<br /><strong>实验内容</strong><br />使用 numpy 库构建简单的数据集，编写简单的三层回归神经网络，输入和输出只有一个神经元，中间隐藏层可设置 N 个神经元，采用 sigmoid 函数作为激活函数。数据集按 y=x+随机噪声进行构建，x 取值为 0, 1, …, 19。学习梯度计算，及梯度下降法进行神经网络的权值修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sigmoid_derivative</span>(<span class="hljs-params">s</span>):  <span class="hljs-comment">#对sigmoid进行求导</span><br>    ds = s*(<span class="hljs-number">1</span>-s)<br>    <span class="hljs-keyword">return</span> ds<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sigmoid</span>(<span class="hljs-params">x</span>):   <br>    s=<span class="hljs-number">1</span>/(<span class="hljs-number">1</span>+np.exp(-x))<br>    <span class="hljs-keyword">return</span> s<br></code></pre></td></tr></table></figure><ul><li>激活函数sigmoid函数也叫Logistic函数，是一个在生物学上常见的S型函数,用于隐层神经元输出，取值范围为(0,1)，它可以将一个实数映射到(0,1)的区间，可以用来做二分类。在特征相差比较复杂或是相差不是特别大时效果比较好。Sigmoid作为激活函数有以下优缺点：</li><li><ul><li>优点：平滑、易于求导。</li></ul></li><li><ul><li>缺点：激活函数计算量大，反向传播求误差梯度时，求导涉及除法；反向传播时，很容易就会出现梯度消失的情况，从而无法完成深层网络的训练。<br /><img src="https://s1.imagehub.cc/images/2022/08/31/Snipaste_2022-08-31_17-34-12.png" alt="" /></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">N,D_in,H,D_out = <span class="hljs-number">20</span>,<span class="hljs-number">1</span>,<span class="hljs-number">64</span>,<span class="hljs-number">1</span><br>np.random.seed(<span class="hljs-number">0</span>)<br>x=np.arange(<span class="hljs-number">0</span>,N,<span class="hljs-number">1</span>).reshape(N,D_in)*<span class="hljs-number">1.0</span><br>y=x+np.random.randn(N,D_out)<br></code></pre></td></tr></table></figure><p>生成随机数据,x为一个[20,1]的从0-19数据,y为随机的[1,20]的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">w1=np.random.randn(D_in,H)<br>w2=np.random.randn(H,D_out)<br></code></pre></td></tr></table></figure><p>随机生成两个参数w1,w2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">learning_rate=<span class="hljs-number">1e-4</span> <span class="hljs-comment">#学习率</span><br><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20000</span>): <span class="hljs-comment">#反向传播算法</span><br>    y1=x.dot(w1) <span class="hljs-comment">#x和w1进行点积 得到y1  20*64 第一层</span><br>    y_relu=sigmoid(y1) <span class="hljs-comment">#将y1输入激活函数得到f(y1) 20*64</span><br>    y2=y_relu.dot(w2) <span class="hljs-comment">#f(y)和w2进行点积得到y2  20*1 第二层</span><br>    loss=np.square(y2-y).<span class="hljs-built_in">sum</span>() <span class="hljs-comment">#损失函数</span><br>    grad_y2=<span class="hljs-number">2.0</span>*(y2-y) <span class="hljs-comment">#损失函数对y2的偏导数 20*1</span><br>    grad_w2=y_relu.T.dot(grad_y2) <span class="hljs-comment"># 损失函数对w2的偏导数 y_relu的转置(64*20)与grad_y2(20*1)的点积 (64*1)</span><br>    grad_y1=grad_y2.dot(w2.T) <br>    grad_y1=grad_y1*sigmoid_derivative(y_relu)<br>    grad_w1=x.T.dot(grad_y1) <span class="hljs-comment">#损失函数对w1的偏导数</span><br>    w1-=learning_rate*grad_w1<br>    w2-=learning_rate*grad_w2<br>    <span class="hljs-keyword">if</span>(t%<span class="hljs-number">2000</span>==<span class="hljs-number">0</span>):<br>        plt.cla()<br>        plt.scatter(x,y)<br>        plt.scatter(x,y2)<br>        plt.plot(x,y2,<span class="hljs-string">&#x27;r-&#x27;</span>,lw=<span class="hljs-number">1</span>,label=<span class="hljs-string">&quot;plot figure&quot;</span>)<br>        plt.text(<span class="hljs-number">0.5</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;t=%d:Loss=%.4f&#x27;</span>%(t,loss),fontdict=&#123;<span class="hljs-string">&#x27;size&#x27;</span>:<span class="hljs-number">20</span>,<span class="hljs-string">&#x27;color&#x27;</span>:<span class="hljs-string">&#x27;red&#x27;</span>&#125;)<br>        plt.show()<br></code></pre></td></tr></table></figure><p>用反向传播算法得到<strong>w1和w2的梯度</strong>,再根据学习率对w1和w2进行适当的更新</p><ul><li><strong>反向传播算法:</strong> 简称BP算法，适合于多层神经元网络的一种学习算法，它建立在<strong>梯度下降法</strong>的基础上。BP算法的学习过程由正向传播过程和反向传播过程组成。在正向传播过程中，输入信息通过输入层经隐含层，逐层处理并传向输出层。如果在输出层得不到期望的输出值，则取输出与期望的误差的平方和作为目标函数，转入反向传播，逐层求出目标函数对各神经元权值的偏导数，构成目标函数对权值向量的梯量，作为修改权值的依据，网络的学习在权值修改过程中完成。误差达到所期望值时，网络学习结束。</li><li><strong>梯度下降法:</strong> 绝大多数的机器学习模型都会有一个损失函数。比如常见的均方误差（Mean Squared Error)损失函数,梯度下降的目的，就是为了<strong>最小化损失函数</strong>。根据损失函数对w1和w2求导得到的梯度,我们知道该往梯度方向更新参数来减小损失函数:<br /><img src="https://s1.imagehub.cc/images/2022/08/31/Snipaste_2022-08-31_18-50-01.png" alt="" /><br />但是更新不宜过多,也不宜过少,过多会直接越过最小值,过小会使学习效率过低,这里我们用到学习率(Learning Rate)这个概念。通过学习率，可以计算前进的距离。</li></ul><p>代码运行结果如下:<br /><img src="https://s1.imagehub.cc/images/2022/08/31/out1put.png" alt="" /><br /><img src="https://s1.imagehub.cc/images/2022/08/31/ou2tput.png" alt="" /><br /><img src="https://s1.imagehub.cc/images/2022/08/31/out3put.png" alt="" /><br /><img src="https://s1.imagehub.cc/images/2022/08/31/outpu4t.png" alt="" /></p><hr /><h2 id="基于pytorch的回归神经网络"><a class="markdownIt-Anchor" href="#基于pytorch的回归神经网络"></a> 基于pytorch的回归神经网络</h2><p>上面我们看到基于numpy实现的回归神经网络,但如果修改学习率,很大概率会梯度消失,难以拟合.而pytorch封装的函数对模型的训练效果会更好.</p><p><strong>实验目的：</strong></p><ol><li>了解 pytorch 下采用 adam 梯度下降法进行神经网络中的权值更新；</li><li>学习使用 pytorch 编写简单的三层神经网络进行回归实验。</li></ol><p><strong>实验内容：</strong><br />使用 numpy 库构建简单的数据集，编写简单的三层回归神经网络，输入和输出只有一个神经元，中间隐藏层可设置 N 个神经元，采用 Sigmoid 函数作为激活函数。数据集按 y=x+随机噪声进行构建，x 取值为 0, 1, …, 19。了解 pytorch 中的梯度计算，及梯度下降法进行神经网络的权值更新。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>N, D_in, H, D_out = <span class="hljs-number">50</span>, <span class="hljs-number">1</span>, <span class="hljs-number">64</span>, <span class="hljs-number">1</span><br>np.random.seed(<span class="hljs-number">0</span>)<br>x = torch.tensor(np.arange(<span class="hljs-number">0</span>,N,<span class="hljs-number">1</span>).reshape(N,D_in),dtype=torch.float32) <br>y = x +torch.tensor(np.random.randn(N,D_out), dtype=torch.float32)<br></code></pre></td></tr></table></figure><p>生成训练集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">model = torch.nn.Sequential(<br>torch.nn.Linear(D_in, H), torch.nn.ReLU(), torch.nn.Linear(H, D_out), )<span class="hljs-comment">#构建模型 两层全连接层</span><br></code></pre></td></tr></table></figure><ul><li>torch.nn.Sequential是一个Sequential容器，模块将按照构造函数中传递的顺序添加到模块中。通俗的话说，就是根据自己的需求，把不同的函数组合成一个（小的）模块使用或者把组合的模块添加到自己的网络中。</li><li>PyTorch的nn.Linear（）用于设置神经网络中的全连接层。</li><li>此处用的激活函数是ReLU。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">loss_fn = torch.nn.MSELoss(reduction=<span class="hljs-string">&#x27;sum&#x27;</span>) <span class="hljs-comment">#损失函数</span><br></code></pre></td></tr></table></figure><ul><li>torch.nn.MSELoss()用于测量输入x和目标y中每个元素之间的均方误差。reduction为’sum’表示求和,'mean’表示求平均</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">learning_rate = <span class="hljs-number">1e-4</span> <span class="hljs-comment">#学习率</span><br>optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate) <span class="hljs-comment">#优化器：优化参数 model.parameters()传入参数</span><br></code></pre></td></tr></table></figure><ul><li>model.parameters()保存的是Weights和Bais参数的值。</li><li>torch.optim是一个实现了多种优化算法的包，大多数通用的方法都已支持，提供了丰富的接口调用，未来更多精炼的优化算法也将整合进来。<br />为了使用torch.optim，需先构造一个优化器对象Optimizer，用来保存当前的状态，并能够根据计算得到的梯度来更新参数。</li><li>Adam(Adaptive Moment Estimation)本质上是带有动量项的RMSprop，它利用梯度的一阶矩估计和二阶矩估计动态调整每个参数的学习率。它的优点主要在于经过偏置校正后，每一次迭代学习率都有个确定范围，使得参数比较平稳。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5000</span>):<br>    y_pred = model(x)<br>    loss = loss_fn(y_pred, y)<br>    <span class="hljs-keyword">if</span> t % <span class="hljs-number">1000</span> == <span class="hljs-number">0</span>:<br>        plt.cla()<br>        plt.scatter(x.data.numpy(),y.data.numpy())<br>        plt.scatter(x.data.numpy(),y_pred.data.numpy())<br>        plt.plot(x.data.numpy(),y_pred.data.numpy(),<span class="hljs-string">&#x27;r-&#x27;</span>,lw=<span class="hljs-number">1</span>, label=<span class="hljs-string">&quot;plot figure&quot;</span>)<br>        plt.text(<span class="hljs-number">0.5</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;t=%d:Loss=%.4f&#x27;</span> % (t, loss), fontdict=&#123;<span class="hljs-string">&#x27;size&#x27;</span>: <span class="hljs-number">20</span>, <span class="hljs-string">&#x27;color&#x27;</span>: <span class="hljs-string">&#x27;red&#x27;</span>&#125;)<br>        plt.show()<br>    optimizer.zero_grad() <span class="hljs-comment">#清空过往梯度</span><br>    loss.backward() <span class="hljs-comment">#反向传播，计算当前梯度</span><br>    optimizer.step() <span class="hljs-comment"># 根据梯度更新网络参数</span><br></code></pre></td></tr></table></figure><p>计算预估的y值y_pred,求出损失值,计算梯度,由此更新参数,反复训练,得到结果:<br /><img src="https://s1.imagehub.cc/images/2022/08/31/1output.png" alt="" /><br /><img src="https://s1.imagehub.cc/images/2022/08/31/2output.png" alt="" /><br /><img src="https://s1.imagehub.cc/images/2022/08/31/3output.png" alt="" /><br /><img src="https://s1.imagehub.cc/images/2022/08/31/4output.png" alt="" /></p><hr /><h2 id="基于pytorch的分类神经网络"><a class="markdownIt-Anchor" href="#基于pytorch的分类神经网络"></a> 基于pytorch的分类神经网络</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>n_data = torch.ones(<span class="hljs-number">100</span>, <span class="hljs-number">2</span>) <span class="hljs-comment">#生成一个全为1的矩阵</span><br>x0 = torch.normal(<span class="hljs-number">2</span>*n_data, <span class="hljs-number">1</span>) <span class="hljs-comment"># class0 x data (tensor), shape=(100, 2)</span><br>y0 = torch.zeros(<span class="hljs-number">100</span>) <span class="hljs-comment"># class0 y data (tensor), shape=(100, 1)</span><br>x1 = torch.normal(-<span class="hljs-number">2</span>*n_data, <span class="hljs-number">1</span>) <span class="hljs-comment"># class1 x data (tensor), shape=(100, 2)</span><br>y1 = torch.ones(<span class="hljs-number">100</span>) <span class="hljs-comment"># class1 y data (tensor), shape=(100, 1)</span><br>x = torch.cat((x0, x1), <span class="hljs-number">0</span>).<span class="hljs-built_in">type</span>(torch.FloatTensor) <span class="hljs-comment"># shape (200, 2) FloatTensor = 32-bit floating</span><br>y = torch.cat((y0, y1), ).<span class="hljs-built_in">type</span>(torch.LongTensor) <span class="hljs-comment"># shape (200,) LongTensor = 64-bit integer</span><br></code></pre></td></tr></table></figure><p>生成训练样本</p><ul><li>torch.ones()生成一个全为1的矩阵</li><li>torch.normal(means, std, out=None)</li><li><ul><li>means (Tensor)均值 std (Tensor)标准差 out (Tensor)可选的输出张量</li></ul></li><li>torch.cat()在给定维度上对输入的张量序列进行连接操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Net</span>(torch.nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, n_feature, n_hidden, n_output</span>):<br>        <span class="hljs-built_in">super</span>(Net, self).__init__()<br>        self.hidden = torch.nn.Linear(n_feature, n_hidden) <span class="hljs-comment"># hidden layer</span><br>        self.out = torch.nn.Linear(n_hidden, n_output) <span class="hljs-comment"># output layer</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x = torch.sigmoid(self.hidden(x)) <span class="hljs-comment"># activation function for hidden layer</span><br>        x = self.out(x)<br>        <span class="hljs-keyword">return</span> x<br></code></pre></td></tr></table></figure><ul><li>在定义自已的网络的时候，需要继承nn.Module类，并重新实现构造函数__init__构造函数和forward这两个方法。</li><li>super().<strong>init</strong>()，就是继承父类的init方法，同样可以使用super()去继承其他方法。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">net = Net(n_feature=<span class="hljs-number">2</span>, n_hidden=<span class="hljs-number">10</span>, n_output=<span class="hljs-number">2</span>) <span class="hljs-comment"># define the network</span><br>optimizer = torch.optim.SGD(net.parameters(), lr=<span class="hljs-number">0.02</span>) <br>loss_func = torch.nn.CrossEntropyLoss()<br>plt.ion()<br><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>    out = net(x) <span class="hljs-comment"># 预测的值</span><br>    loss = loss_func(out, y) <span class="hljs-comment"># 计算损失</span><br>    optimizer.zero_grad() <span class="hljs-comment"># 清空梯度</span><br>    loss.backward() <span class="hljs-comment"># 反向传播</span><br>    optimizer.step() <span class="hljs-comment"># 更新梯度</span><br>    <span class="hljs-keyword">if</span> t % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>        plt.cla()<br>        prediction = torch.<span class="hljs-built_in">max</span>(out, <span class="hljs-number">1</span>)[<span class="hljs-number">1</span>]<br>        pred_y = prediction.data.numpy()<br>        target_y = y.data.numpy()<br>        plt.scatter(x.data.numpy()[:, <span class="hljs-number">0</span>], x.data.numpy()[:, <span class="hljs-number">1</span>], c=pred_y, s=<span class="hljs-number">100</span>, lw=<span class="hljs-number">0</span>, cmap=<span class="hljs-string">&#x27;RdYlGn&#x27;</span>)<br>        accuracy = <span class="hljs-built_in">float</span>((pred_y == target_y).astype(<span class="hljs-built_in">int</span>).<span class="hljs-built_in">sum</span>()) / <span class="hljs-built_in">float</span>(target_y.size)<br>        plt.text(<span class="hljs-number">1.5</span>, -<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;Accuracy=%.2f&#x27;</span> % accuracy, fontdict=&#123;<span class="hljs-string">&#x27;size&#x27;</span>: <span class="hljs-number">20</span>, <span class="hljs-string">&#x27;color&#x27;</span>: <span class="hljs-string">&#x27;red&#x27;</span>&#125;)<br>        plt.pause(<span class="hljs-number">0.1</span>)<br>plt.ioff()<br>plt.show()<br></code></pre></td></tr></table></figure><p>运行结果如下:<br /><img src="https://s1.imagehub.cc/images/2022/08/31/outputq.png" alt="" /><br /><img src="https://s1.imagehub.cc/images/2022/08/31/outpzut.png" alt="" /><br /><img src="https://s1.imagehub.cc/images/2022/08/31/outxput.png" alt="" /></p>]]></content>
    
    
    
    <tags>
      
      <tag>神经网络</tag>
      
      <tag>人工智能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习基础实验</title>
    <link href="/2022/08/30/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/"/>
    <url>/2022/08/30/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<p>本文介绍了监督学习和无监督学习的经典算法：线性回归以及k-means聚类算法。</p><span id="more"></span><h1 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h1><p><a href="#%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0">线性回归（监督学习）</a><br /><a href="#k-means%E8%81%9A%E7%B1%BB%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0">k-means聚类（无监督学习）</a></p><hr /><h1 id="线性回归监督学习"><a class="markdownIt-Anchor" href="#线性回归监督学习"></a> 线性回归（监督学习）</h1><p><strong>实验目的：</strong></p><p>1.了解线性回归的基本原理<br />2.掌握通过梯度下降方法实现最优解的求解</p><p><strong>实验环境：</strong> python，sklearn，numpy</p><p><strong>实验步骤：</strong></p><p>1、生成数据<br />2、定义画图函数、假设函数、损失函数、梯度计算函数、参数更新函数<br />3、定义线性回归函数，并测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># %matplotlib inline</span><br><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> make_regression <span class="hljs-comment">#导入 make_regression()函数，用来生成回归</span><br>模型数据<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt <span class="hljs-comment">#导入 matplotlib.pyplot，并且重命名为 plt</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <span class="hljs-comment">#导入 numpy 库，并且重命名为 np</span><br></code></pre></td></tr></table></figure><ul><li>函数 make_regression()：用来生成回归模型数据</li><li>参数说明：<br />n_samples：样本数<br />n_features：特征数<br />noise：噪音<br />bias：偏差</li><li>X : array of shape [n_samples, n_features]<br />y : array of shape [n_samples] or [n_samples, n_targets]</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">X, y= make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.4</span>, bias=<span class="hljs-number">50</span>)<br></code></pre></td></tr></table></figure><p>定义一个名为 plotLine()的函数，用来画出生成数据集的散点图和拟合线性模型(y=k*x+b)</p><ul><li><p>参数说明：<br />theta0:即 y=k<em>x+b 中的参数 b<br />theta1:即 y=k</em>x+b 中的参数 k<br />X:数据集的横坐标（列表类型）<br />y:数据集的纵坐标（列表类型）</p></li><li><p>np.linspace(start, stop, num)函数：用来返回 num 个等间距的样本，在区间[start, stop]中。</p></li><li><p>plt.plot(x,y,color,label)：可视化函数<br />参数说明：color:用来设置线条的颜色，color='r’表示红色(b 表示蓝色)；label 用于指定标签</p></li><li><p>plt.scatter(x,y)：用来画散点图。</p></li><li><p>plt.axis(）函数用来指定坐标轴的范围。<br />参数需要以列表的形式给出。</p></li><li><p>plt.show()：将图像显示出。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">plotLine</span>(<span class="hljs-params">theta0, theta1, X, y</span>):<br>    max_x = np.<span class="hljs-built_in">max</span>(X) + <span class="hljs-number">100</span> <span class="hljs-comment">#np.max(X)用来取出 X 中的最大值</span><br>    min_x = np.<span class="hljs-built_in">min</span>(X) - <span class="hljs-number">100</span> <span class="hljs-comment">#np.min(X)用来取出 X 中的最小值</span><br>    xplot = np.linspace(min_x, max_x, <span class="hljs-number">1000</span>) <span class="hljs-comment">#在区间[min_x,max_x]中返回 1000 个等间隔的样本</span><br>    yplot = theta0 + theta1 * xplot <span class="hljs-comment">#将 x 带入线性方程 y=k*x+b 中求得 y</span><br>    <span class="hljs-built_in">print</span>(theta0) <span class="hljs-comment">#打印参数 theta0</span><br>    <span class="hljs-built_in">print</span>(theta1) <span class="hljs-comment">#打印参数 theta1</span><br>    plt.plot(xplot, yplot, color=<span class="hljs-string">&#x27;g&#x27;</span>, label=<span class="hljs-string">&#x27;Regression Line&#x27;</span>) <span class="hljs-comment">#画出线性模型，参数依次表示：横坐标，纵坐标，颜色，标签</span><br>    plt.scatter(X,y) <span class="hljs-comment">#画散点图，参数依次表示横坐标、纵坐标</span><br>    plt.axis([-<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">200</span>]) <span class="hljs-comment">#设置横坐标范围为【-10，10】，纵轴范围为【0，200】</span><br>    plt.show() <span class="hljs-comment">#显示可视化图像</span><br></code></pre></td></tr></table></figure><p>定义一个函数返回y的估计值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">hypothesis</span>(<span class="hljs-params">theta0, theta1, x</span>):<br>    <span class="hljs-keyword">return</span> theta0 + (theta1 * x)<br></code></pre></td></tr></table></figure><p>定义损失函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">cost</span>(<span class="hljs-params">theta0, theta1, X, y</span>):  <span class="hljs-comment"># 计算损失</span><br>    costValue = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> (xi, yi) <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(X, y):  <span class="hljs-comment"># 使用 zip()函数，包为元组的列表</span><br>        costValue += <span class="hljs-number">0.5</span> * ((hypothesis(theta0, theta1, xi) - yi) ** <span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">return</span> costValue<br></code></pre></td></tr></table></figure><p>定义名为 derivatives()的函数，用来计算参数的梯度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">derivatives</span>(<span class="hljs-params">theta0, theta1, X, y</span>): <span class="hljs-comment">#derivative:导数</span><br>    dtheta0 = <span class="hljs-number">0</span> <span class="hljs-comment">#dtheta0：参数 theta0 的梯度，初始化为 0</span><br>    dtheta1 = <span class="hljs-number">0</span> <span class="hljs-comment">#dtheta0：参数 theta0 的梯度，初始化为 0</span><br>    <span class="hljs-keyword">for</span> (xi, yi) <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(X, y): <span class="hljs-comment">#使用 zip()函数依次取出(xi,yi)</span><br>        dtheta0 += hypothesis(theta0, theta1, xi) - yi<br>        dtheta1 += (hypothesis(theta0, theta1, xi) - yi)*xi <span class="hljs-comment">#计算公式为：损失函数对参数</span><br>    dtheta0 /= <span class="hljs-built_in">len</span>(X) <span class="hljs-comment">#求平均梯度，len(X)函数用来计算 X 中的样本数</span><br>    dtheta1 /= <span class="hljs-built_in">len</span>(X) <span class="hljs-comment">#求平均梯度</span><br>    <span class="hljs-keyword">return</span> dtheta0,dtheta1<br></code></pre></td></tr></table></figure><p>定义一个名为 updateParameters()的函数，用来对参数进行更新:</p><ul><li>参数说明：<br />theta0 和 theta1 为待更新参数。<br />X、 y 分别表示横轴和纵轴的数值。<br />alpha：学习率。</li><li>参数的更新：<br />对于参数 w，其更新方式为：w=w-学习率*梯度值。其中学习率是一个超参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">updateParameters</span>(<span class="hljs-params">theta0, theta1, X, y, alpha</span>):  <span class="hljs-comment"># 参数的更新，alpha 表示学习率</span><br>    dtheta0, dtheta1 = derivatives(theta0, theta1, X, y)  <span class="hljs-comment"># dtheta0, dtheta1 分 别 表 示 参 数</span><br>    theta0 = theta0 - (alpha * dtheta0)  <span class="hljs-comment"># 依据参数更新方式更新参数 theta0</span><br>    theta1 = theta1 - (alpha * dtheta1)  <span class="hljs-comment"># 依据参数更新方式更新参数 theta1</span><br>    <span class="hljs-keyword">return</span> theta0, theta1  <span class="hljs-comment"># 返回更新好的参数</span><br></code></pre></td></tr></table></figure><p>定义并调用一个名为 LinearRegression()的线性回归函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">LinearRegression</span>(<span class="hljs-params">X, y</span>):<br>    theta0 = np.random.rand()  <span class="hljs-comment"># 给 theta0 赋一个随机初始值。</span><br>    theta1 = np.random.rand()  <span class="hljs-comment"># 给 theta1 赋一个随机初始值。</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1000</span>):  <span class="hljs-comment"># 进行 1000 次参数的更新，每隔 100 次跟新打印一次图片</span><br>        <span class="hljs-keyword">if</span> i % <span class="hljs-number">100</span> == <span class="hljs-number">0</span>:  <span class="hljs-comment"># 只有当 i 整除 100 时才进行一次图片打印</span><br>            plotLine(theta0, theta1, X, y)<br>            <span class="hljs-built_in">print</span>(cost(theta0, theta1, X, y))<br>        theta0, theta1 = updateParameters(theta0, theta1, X, y, <span class="hljs-number">0.005</span>)<br>LinearRegression(X, y) <span class="hljs-comment">#调用线性回归函数。</span><br></code></pre></td></tr></table></figure><p>实验结果如下：</p><h2 id="g1g2g3g4g5g6g7"><a class="markdownIt-Anchor" href="#g1g2g3g4g5g6g7"></a> <img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-27-30.png" alt="g1" /><br /><img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-27-52.png" alt="g2" /><br /><img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-28-21.png" alt="g3" /><br /><img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-28-35.png" alt="g4" /><br /><img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-28-42.png" alt="g5" /><br /><img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-28-54.png" alt="g6" /><br /><img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-29-06.png" alt="g7" /></h2><p><strong>原理</strong><br />给定一组样本观测值x<sub>i</sub>,y<sub>i</sub>，(i=1,2,…n)，要求回归函数尽可能拟合这组值。普通最小二乘法给出的判断标准是：残差平方和的值达到最小。<br />残差平方和的公式为：<br /><img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-43-27.png" alt="g8" /><br />有两个未知参数的二次方程，画出来是一个三维空间中的图像，类似下面：<br /><img src="https://s1.imagehub.cc/images/2022/08/30/Snipaste_2022-08-30_18-43-38.png" alt="g9" /><br />导数为0时，Q取最小值，因此我们分别对\beta<sub>1</sub>和\beta<sub>2</sub>求偏导并令其为0。</p><h1 id="k-means聚类无监督学习"><a class="markdownIt-Anchor" href="#k-means聚类无监督学习"></a> k-means聚类（无监督学习）</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> numpy <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br></code></pre></td></tr></table></figure><p>定义一个名为 euclDistance()的函数，用来计算两个矩阵之间的欧式距离。其中参数vector1, vector2 分别表示两个矩阵。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">euclDistance</span>(<span class="hljs-params">vector1, vector2</span>):<br>    <span class="hljs-keyword">return</span> sqrt(<span class="hljs-built_in">sum</span>(power(vector2 - vector1, <span class="hljs-number">2</span>))) <span class="hljs-comment">#求这两个矩阵的距离，vector1、2 均为矩阵</span><br></code></pre></td></tr></table></figure><p>定义一个名为 initCentroids()的函数，用来在样本集中随机选取 k 个样本点作为初始<br />质心，其中参数 dataSet 为已给数据集，k 表示创建中心点的个数。返回值为所创建的 k 个中心点</p><ul><li>np.zeros([k, n])：用来创建一个 k 行 n 列的全 0 数组。</li><li>np.random.uniform(a,b):返回区间[a,b)中的任意值。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#在样本集中随机选取 k 个样本点作为初始质心。</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">initCentroids</span>(<span class="hljs-params">dataSet, k</span>):<br>    numSamples, dim = dataSet.shape <span class="hljs-comment">#矩阵的行数、列数 。</span><br>    centroids = zeros((k, dim)) <span class="hljs-comment"># 创建一个 k 行 dim 列的全 0 数组。</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k):<br>        index = <span class="hljs-built_in">int</span>(random.uniform(<span class="hljs-number">0</span>, numSamples)) <span class="hljs-comment">#随机产生一个浮点数，然后将其转化为 int 型。</span><br>        centroids[i, :] = dataSet[index, :] <span class="hljs-comment"># 将 dataSet 中 第 index+1 行 赋 值 给centroids 的第 i+1 行。</span><br>    <span class="hljs-keyword">return</span> centroids<br></code></pre></td></tr></table></figure><p>定义一个名为 kmeans()的聚类算法，用于将 dataSet 矩阵中的样本分成 k 个类</p><ul><li>np.mat(a):用于将数组 a 转换为矩阵。</li><li>np.zeros([k, n])：用来创建一个 k 行 n 列的全 0 数组。</li><li>matrix.A:将矩阵类型转换为 array 类型。</li><li>np.nonzero(array):用于得到数组 array 中非零元素的位置（数组索引）,参数 array 为<br />一个数组。</li><li>np.mean()：求均值。</li><li>plt.plot(x,y,color,marksize):当使用此函数画一个数据点时，参数 x 表示横坐标,参数 y 表示纵坐标，参数 color 用来指定点的颜色，参数 marksize 用来指示点的大小。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">kmeans</span>(<span class="hljs-params">dataSet, k</span>):<br>    numSamples = dataSet.shape[<span class="hljs-number">0</span>] <span class="hljs-comment">#读取矩阵 dataSet 的第一维度的长度,即获得有多少个样本数据</span><br>    clusterAssment = mat(zeros((numSamples, <span class="hljs-number">2</span>))) <span class="hljs-comment">#得到一个 N*2 的零矩阵,建立簇分配结果矩阵，第一列存类别，第二列存误差。</span><br>    clusterChanged = <span class="hljs-literal">True</span> <span class="hljs-comment">#用来判断样本聚类结果是否变化的变量。</span><br>    <span class="hljs-comment">## step 1: init centroids</span><br>    centroids = initCentroids(dataSet, k) <span class="hljs-comment">#在样本集中随机选取 k 个样本点作为初始质心</span><br>    <span class="hljs-keyword">while</span> clusterChanged:<br>        clusterChanged = <span class="hljs-literal">False</span><br>        <span class="hljs-comment">## for each sample</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numSamples): <span class="hljs-comment">#range</span><br>            minDist = <span class="hljs-number">100000.0</span> <span class="hljs-comment">#创建的一个临时变量，用来储存某个样本到所有聚类中心的最小距离。</span><br>            minIndex = <span class="hljs-number">0</span> <span class="hljs-comment">#创建的一个临时变量，用来储存和某个样本距离最近的聚类中心的类别作为该样本的类别。</span><br>            <span class="hljs-comment">## for each centroid</span><br>            <span class="hljs-comment">## step 2: find the centroid who is closest</span><br>            <span class="hljs-comment">#计算每个样本点与质点之间的距离，将其归内到距离最小的那一簇</span><br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k):<br>                distance = euclDistance(centroids[j, :], dataSet[i, :]) <span class="hljs-comment">#计算每个样本到每个聚类中心之间的距离。</span><br>                <span class="hljs-keyword">if</span> distance &lt; minDist:<br>                    minDist = distance<br>                    minIndex = j<br>            <span class="hljs-comment">## step 3: update its cluster</span><br>            <span class="hljs-comment">#k 个簇里面与第 i 个样本距离最小的的标号和距离保存在 clusterAssment中</span><br>            <span class="hljs-comment">#若所有的样本所属类别不在变化，则退出 while 循环</span><br>            <span class="hljs-keyword">if</span> clusterAssment[i, <span class="hljs-number">0</span>] != minIndex:<br>                clusterChanged = <span class="hljs-literal">True</span><br>                clusterAssment[i, :] = minIndex, minDist**<span class="hljs-number">2</span> <span class="hljs-comment">#两个**表示的是 minDist的平方</span><br>        <span class="hljs-comment">## step 4: update centroids</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k):<br>            <span class="hljs-comment">#clusterAssment[:,0].A==j 是找出矩阵 clusterAssment 中第一列元素中等于j 的行的下标，返回的是一个以 array 的列表，第一个 array 为等于 j 的下标</span><br>            pointsInCluster = dataSet[nonzero(clusterAssment[:, <span class="hljs-number">0</span>].A == j)[<span class="hljs-number">0</span>]] <span class="hljs-comment">#将 dataSet矩阵中相对应的样本提取出来</span><br>            centroids[j, :] = mean(pointsInCluster, axis = <span class="hljs-number">0</span>) <span class="hljs-comment">#计算标注为 j 的所有样本的平均值</span><br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&#x27;Congratulations, cluster complete!&#x27;</span>)<br>    <span class="hljs-keyword">return</span> centroids, clusterAssment<br><span class="hljs-comment"># show your cluster only available with 2-D data</span><br><span class="hljs-comment">#centroids 为 k 个类别，其中保存着每个类别的质心</span><br><span class="hljs-comment">#clusterAssment 为样本的标记，第一列为此样本的类别号，第二列为到此类别质心的距离</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">showCluster</span>(<span class="hljs-params">dataSet, k, centroids, clusterAssment</span>):<br>    numSamples, dim = dataSet.shape<br>    <span class="hljs-keyword">if</span> dim != <span class="hljs-number">2</span>:<br>        <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;Sorry! I can not draw because the dimension of your data is not 2!&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    mark = [<span class="hljs-string">&#x27;or&#x27;</span>, <span class="hljs-string">&#x27;ob&#x27;</span>, <span class="hljs-string">&#x27;og&#x27;</span>, <span class="hljs-string">&#x27;ok&#x27;</span>, <span class="hljs-string">&#x27;^r&#x27;</span>, <span class="hljs-string">&#x27;+r&#x27;</span>, <span class="hljs-string">&#x27;sr&#x27;</span>, <span class="hljs-string">&#x27;dr&#x27;</span>, <span class="hljs-string">&#x27;&lt;r&#x27;</span>, <span class="hljs-string">&#x27;pr&#x27;</span>] <span class="hljs-comment">#样本颜色</span><br>    <span class="hljs-keyword">if</span> k &gt; <span class="hljs-built_in">len</span>(mark):<br>        <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;Sorry! Your k is too large! please contact wojiushimogui&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    <span class="hljs-comment"># draw all samples</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(numSamples):<br>        markIndex = <span class="hljs-built_in">int</span>(clusterAssment[i, <span class="hljs-number">0</span>]) <span class="hljs-comment">#为样本指定颜色</span><br>        plt.plot(dataSet[i, <span class="hljs-number">0</span>], dataSet[i, <span class="hljs-number">1</span>], mark[markIndex]) <span class="hljs-comment">#画出样本</span><br>    mark = [<span class="hljs-string">&#x27;Dr&#x27;</span>, <span class="hljs-string">&#x27;Db&#x27;</span>, <span class="hljs-string">&#x27;Dg&#x27;</span>, <span class="hljs-string">&#x27;Dk&#x27;</span>, <span class="hljs-string">&#x27;^b&#x27;</span>, <span class="hljs-string">&#x27;+b&#x27;</span>, <span class="hljs-string">&#x27;sb&#x27;</span>, <span class="hljs-string">&#x27;db&#x27;</span>, <span class="hljs-string">&#x27;&lt;b&#x27;</span>, <span class="hljs-string">&#x27;pb&#x27;</span>] <span class="hljs-comment">#中心的颜色</span><br>    <span class="hljs-comment"># draw the centroids</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k):<br>        plt.plot(centroids[i, <span class="hljs-number">0</span>], centroids[i, <span class="hljs-number">1</span>], mark[i], markersize = <span class="hljs-number">12</span>) <span class="hljs-comment">#画出中心点</span><br>    plt.show() <span class="hljs-comment">#显示图片</span><br></code></pre></td></tr></table></figure><ul><li>&quot;.txt&quot;文件的读取：<br />f=open(file_path) #其中 f 叫做文件句柄，file_path 为文件所在的路径。<br />f.readlines()函数用来读取文件中的全部内容，返回值为一个列表，列表中的每个元素为每行对应的内容。<br />f.close()用来关闭所打开的文件。</li><li>.strip()方法用于移除字符串头尾指定的字符（默认为空格或换行符）。</li><li>.split(str)方法通过指定分隔符对字符串进行切片，其中参数 str 为分隔符，返回值为<br />一个列表。</li><li>.append(obj)方法用于在列表末尾添加 obj。</li></ul><pre class="highlight"><code class="python">  <span class="hljs-comment">## step 1: 载入待聚类数据</span><span class="hljs-keyword">print</span> (<span class="hljs-string">"step 1: load data..."</span> )dataSet = [] <span class="hljs-comment">#列表，用来表示，列表中的每个元素也是一个二维的列表；这个二维列表就是一个样本，样本中包含有我们的属性值和类别号。</span><span class="hljs-comment">#与我们所熟悉的矩阵类似，最终我们将获得 N*2 的矩阵，每行元素构成了我们的训练样本的属性值和类别号</span>fileIn = open(<span class="hljs-string">"testdata.txt"</span>) <span class="hljs-comment">#"D:/testdata.txt"为数据文件所在位置的绝对路径。</span><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> fileIn.readlines(): <span class="hljs-comment">#依次遍历每一行</span>    temp=[] <span class="hljs-comment">#定义一个缓存列表</span>    lineArr = line.strip().split(<span class="hljs-string">'\t'</span>) <span class="hljs-comment">#line.strip()把末尾的'\n'去掉，.split('\t')表示以'\t'为分隔符将字符串切片。</span>    temp.append(float(lineArr[<span class="hljs-number">0</span>])) <span class="hljs-comment">#float(a)表示将 a 转化为 float 类型。</span>    temp.append(float(lineArr[<span class="hljs-number">1</span>]))    dataSet.append(temp) <span class="hljs-comment">#向 dataSet 列表中添加元素。</span>fileIn.close() <span class="hljs-comment">#关闭刚刚打开的 testdata.txt 文件。</span><span class="hljs-comment">## step 2: 聚类中... </span><span class="hljs-keyword">print</span> (<span class="hljs-string">"step 2: clustering..."</span> )dataSet = mat(dataSet) <span class="hljs-comment">#mat()函数是 Numpy 中的库函数，将数组转化为矩阵</span>k = <span class="hljs-number">4</span>centroids, clusterAssment = kmeans(dataSet, k) <span class="hljs-comment">#调用 KMeans 文件中定义的 kmeans 方法</span><span class="hljs-comment">## step 3: 画图展示结果</span><span class="hljs-keyword">print</span> (<span class="hljs-string">"step 3: show the result..."</span> )showCluster(dataSet, k, centroids, clusterAssment)</code></pre><p>实验结果如下<br /><img src="https://s1.imagehub.cc/images/2022/08/30/output.png" alt="g10" /><br /><strong>原理</strong><br />聚类属于非监督学习，K均值聚类是最基础常用的聚类算法。它的基本思想是，通过迭代寻找K个簇（Cluster）的一种划分方案，使得聚类结果对应的损失函数最小。<br />KMeans最核心的部分就是先固定中心点，调整每个样本所属的类别来减少损失函数；再固定每个样本的类别，调整中心点继续减小损失函数。两个过程交替循环，损失函数单调递减直到最（极）小值，中心点和样本划分的类别同时收敛。</p>]]></content>
    
    
    
    <tags>
      
      <tag>人工智能</tag>
      
      <tag>机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇Blog</title>
    <link href="/2022/08/29/%E7%AC%AC%E4%B8%80%E7%AF%87Blog/"/>
    <url>/2022/08/29/%E7%AC%AC%E4%B8%80%E7%AF%87Blog/</url>
    
    <content type="html"><![CDATA[<p>简要记录github+hexo搭建个人博客的步骤</p> <span id="more"></span><h1 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h1><ul><li><a href="#%E5%AE%89%E8%A3%85hexo">安装Hexo</a></li><li><a href="#%E4%B8%8B%E8%BD%BDgit">下载Git</a></li><li><a href="#git%E7%BB%91%E5%AE%9Agithub">Git绑定Github</a><ul><li><a href="#%E7%BB%91%E5%AE%9Agithub">绑定Github</a></li><li><a href="#%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6%E6%9C%AC%E5%9C%B0%E6%B2%A1%E6%9C%89git%E4%BB%93%E5%BA%93">提交文件(本地没有git仓库)</a></li></ul></li><li><a href="#%E5%AE%89%E8%A3%85node.js">安装node.js</a></li><li><a href="#%E5%AE%89%E8%A3%85Hexo">安装Hexo</a></li></ul><hr /><h2 id="下载git"><a class="markdownIt-Anchor" href="#下载git"></a> 下载Git</h2><p><a href="https://git-scm.com/">Git官网</a></p><h2 id="git绑定github"><a class="markdownIt-Anchor" href="#git绑定github"></a> Git绑定Github</h2><h3 id="绑定github"><a class="markdownIt-Anchor" href="#绑定github"></a> 绑定Github</h3><p>我们要用git上传文件到GitHub首先得利用SSH<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>登录远程主机，而登录方式有两种：一种是口令登录；另一种是公钥登录。口令登录每次都要输入密码十分麻烦，而公钥登录就省去了输入密码的步骤，所以我们选择公钥授权。首先我们得在 GitHub 上添加 SSH key 配置，要想生成SSH key，就要先安装 SSH，不过我们安装了 Git Bash，其应该自带了 SSH。</p><p>然后，输入 ssh-keygen -t rsa 命令（注意空格），表示我们指定 RSA 算法生成密钥，然后敲四次回车键，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub.。<br />接下来我们要做的事情就是把公钥 id_rsa.pub 的内容添加到 GitHub。复制公钥 id_rsa.pub 文件里的内容:<br />接下来进入我们的 GitHub 主页，先点击右上角，再点击 settings ,点击 SSH and GPG keys，再点击 New SSH key,将复制的公钥 id_rsa.pub 的内容粘贴到 key 内，再点击 Add SSH key。</p><blockquote><p>git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和Shift+insert。</p></blockquote><h3 id="提交文件本地没有git仓库"><a class="markdownIt-Anchor" href="#提交文件本地没有git仓库"></a> 提交文件(本地没有git仓库)</h3><p>进入GitHub个人主页，点击进入新建的 text 项目，点击 Clone or download，再复制地址，然后进入我们准备存储 Git 仓库的目录（在git仓库这个文件下右键打开Git Bash），接下来，输入 git clone <a href="https://github.com/yourname/text.git">https://github.com/yourname/text.git</a> ，将远程仓库 clone 到本地。<br />现在我们在git仓库创建一个 text.txt 测试文件，从此目录进入 Git Bash，输入 git status 命令查看仓库状态。text 已经是一个 Git 仓库了，而我们刚刚创建的文件 text.txt 没有被追踪，也就是没有提交到本地仓库。现在我们使用 git add 命令将文件添加到了「临时缓冲区」，再用 git commit -m “提交信息” 将其提交到本地仓库。输入 git log 命令查看仓库提交日志。现在输入 git push origin main 命令，将本地仓库提交到远程仓库，这时Github就有了text文件。</p><h3 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs"></a> 安装node.js</h3><p><a href="https://nodejs.org/en/">node.js官网</a><br />安装完成可以用打开cmd检验一下是否安装成功，用 node -v 和 npm -v 命令检查版本<br /><strong>设置npm在安装全局模块时的路径和环境变量：</strong><br />因为如果不设置的话，安装模块的时候就会把模块装到C盘，占用C盘的空间，并且有可能安装好hexo后却无法使用，所以我们需要设置一下：<br />在 nodejs 文件夹中新建两个空文件夹 node_cache、node_global，打开cmd，输入如下两个命令：</p><blockquote><p>npm config set prefix “D:\nodejs\node_global”<br />n&gt;pm config set cache “D:\nodejs\node_cache”</p></blockquote><p>然后<strong>设置环境变量</strong>：在系统变量中新建一个变量名为“NODE_PATH”，值为:</p><blockquote><p>D:\nodejs\node_modules</p></blockquote><p>然后编辑用户变量里的Path，将相应npm的路径改为：</p><blockquote><p>D:\nodejs\node_global</p></blockquote><h3 id="安装hexo"><a class="markdownIt-Anchor" href="#安装hexo"></a> 安装Hexo</h3><p>Hexo就是我们的个人博客网站的框架，在安装之前，我们要先在GitHub上创立一个仓库，名称为&quot;<a href="http://yourname.github.io">yourname.github.io</a>&quot;(<strong>此处yourname必须和你github用户名相同</strong>)，访问权限选择Public。<br />接下来就是安装Hexo，首先在D盘建立一个文件夹 Blog，点开 Blog 文件夹，鼠标右键打开 Git Bush Here，输入npm命令安装Hexo：</p><blockquote><p>npm install -g hexo-cli</p></blockquote><p>安装完成后，输入 hexo init 命令初始化博客(可能会失败，多试几次)，然后输入 hexo g 静态部署，这时网页已经部署完成，输入 hexo s 命令可以查看。<br />现在回到我们的 Blog 文件夹，用笔记本打开 _config.yml 文件，下滑到文件底部，填上如下内容：</p><blockquote><p>deploy:<br />type: git<br />repository: <a href="https://github.com/yourname/yourname.github.io.git">https://github.com/yourname/yourname.github.io.git</a>  #你的仓库地址<br />branch: main</p></blockquote><p>然后回到 Blog 文件夹中，打开 Git Bash，安装Git部署插件，输入命令:</p><blockquote><p>npm install hexo-deployer-git --save</p></blockquote><p>然后分别输入以下三条命令：</p><blockquote><p>hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public<br />hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)<br />hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</p></blockquote><p>(这三条命令在更新博客时也会用到)<br />完成以后，打开浏览器，输入 <a href="https://yourname.github.io">https://yourname.github.io</a> 就可以打开你的网页了</p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>SSH（安全外壳协议，Secure Shell 的缩写）是建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。简单来说，SSH就是保障你的账户安全，将你的数据加密压缩，不仅防止其他人截获你的数据，还能加快传输速度。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    
    <tags>
      
      <tag>搭建个人网页</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
